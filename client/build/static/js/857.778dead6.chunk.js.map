{"version":3,"file":"static/js/857.778dead6.chunk.js","mappings":"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","sources":["components/LineChart.js","components/SmoothTransition.js","utils/requestThrottle.js","components/MarketPanel.js","components/LoadingButton.js","components/FilterSidebar.js","components/TriggeredAlertsPanel.js","components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  CircularProgress,\r\n  ButtonGroup,\r\n  Button,\r\n  useTheme,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport { createChart, LineSeries } from \"lightweight-charts\";\r\nimport { format } from \"date-fns\";\r\n\r\n// Available timeframes\r\nconst TIMEFRAMES = [\r\n  { value: \"1m\", label: \"1M\", limit: 1000 },\r\n  { value: \"5m\", label: \"5M\", limit: 200 },\r\n  { value: \"15m\", label: \"15M\", limit: 200 },\r\n  { value: \"30m\", label: \"30M\", limit: 200 },\r\n  { value: \"1h\", label: \"1H\", limit: 1000 },\r\n  { value: \"4h\", label: \"4H\", limit: 1000 },\r\n  { value: \"1d\", label: \"1D\", limit: 365 },\r\n];\r\n\r\n// Line chart component using named imports\r\nconst LineChart = ({\r\n  symbol,\r\n  timeframe: propTimeframe = \"1h\",\r\n  onTimeframeChange,\r\n  onSymbolChange,\r\n}) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  const containerRef = useRef(null);\r\n  const chartRef = useRef(null);\r\n  const seriesRef = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedTimeframe, setSelectedTimeframe] = useState(propTimeframe);\r\n  const [latestAlert, setLatestAlert] = useState(null);\r\n  const [livePrice, setLivePrice] = useState(null);\r\n  const [isShowingTriggeredAlert, setIsShowingTriggeredAlert] = useState(false);\r\n  const [isUsingFallbackData, setIsUsingFallbackData] = useState(false);\r\n\r\n  // Get the current timeframe config\r\n  const currentTimeframeConfig =\r\n    TIMEFRAMES.find((tf) => tf.value === selectedTimeframe) || TIMEFRAMES[4]; // Default to 1h\r\n\r\n  // Fetch latest alert and set up real-time updates\r\n  useEffect(() => {\r\n    const fetchLatestAlert = async () => {\r\n      try {\r\n        const API_URL =\r\n          process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n        const response = await fetch(\r\n          `${API_URL}/api/triggered-alerts?limit=1&sort=createdAt&order=desc`\r\n        );\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data.triggeredAlerts && data.triggeredAlerts.length > 0) {\r\n            setLatestAlert(data.triggeredAlerts[0]);\r\n            console.log(\r\n              \"📊 Chart loaded latest alert:\",\r\n              data.triggeredAlerts[0]\r\n            );\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching latest alert:\", error);\r\n      }\r\n    };\r\n\r\n    fetchLatestAlert();\r\n\r\n    // Set up Socket.IO connection for real-time updates\r\n    const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n    const io = require(\"socket.io-client\");\r\n    const socket = io(API_URL);\r\n\r\n    // Listen for new triggered alerts\r\n    socket.on(\"triggered-alert-created\", (data) => {\r\n      console.log(\"📡 Chart received new triggered alert via socket:\", data);\r\n\r\n      // Always update the latest alert data for real-time display\r\n      if (data.triggeredAlert) {\r\n        setLatestAlert(data.triggeredAlert);\r\n        console.log(\r\n          \"📊 Chart updated with new triggered alert data:\",\r\n          data.triggeredAlert\r\n        );\r\n\r\n        // Automatically switch to the triggered symbol if onSymbolChange is provided\r\n        if (onSymbolChange && data.triggeredAlert.symbol !== symbol) {\r\n          console.log(\r\n            \"🔄 Auto-switching chart to triggered symbol:\",\r\n            data.triggeredAlert.symbol\r\n          );\r\n          onSymbolChange(data.triggeredAlert.symbol);\r\n          setIsShowingTriggeredAlert(true);\r\n        }\r\n\r\n        // Update live price if this is the current symbol\r\n        if (data.triggeredAlert.symbol === symbol) {\r\n          console.log(\r\n            \"🔥 Chart is now showing LIVE data for triggered symbol:\",\r\n            symbol\r\n          );\r\n          setLivePrice(\r\n            data.triggeredAlert.marketData?.price ||\r\n              data.triggeredAlert.conditionDetails?.actualValue\r\n          );\r\n          setIsShowingTriggeredAlert(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    // Listen for live price updates (if available)\r\n    socket.on(\"price-update\", (data) => {\r\n      if (data.symbol === symbol && data.price) {\r\n        setLivePrice(data.price);\r\n        console.log(\"💰 Live price update for\", symbol, \":\", data.price);\r\n\r\n        // Update chart with new price data in real-time\r\n        if (seriesRef.current && data.timestamp) {\r\n          const newDataPoint = {\r\n            time: Math.floor(Date.now() / 1000), // Current timestamp in seconds\r\n            value: data.price,\r\n          };\r\n\r\n          try {\r\n            seriesRef.current.update(newDataPoint);\r\n            console.log(\"📈 Chart updated with real-time price:\", data.price);\r\n          } catch (error) {\r\n            console.error(\"Error updating chart with real-time data:\", error);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [symbol]);\r\n\r\n  // Helper function to format numbers\r\n  const formatNumber = (num) => {\r\n    if (num >= 1e9) {\r\n      return (num / 1e9).toFixed(1) + \"B\";\r\n    } else if (num >= 1e6) {\r\n      return (num / 1e6).toFixed(1) + \"M\";\r\n    } else if (num >= 1e3) {\r\n      return (num / 1e3).toFixed(1) + \"K\";\r\n    }\r\n    return num.toFixed(0);\r\n  };\r\n\r\n  // Use a key to force remounting when symbol/timeframe changes\r\n  const chartKey = `${symbol || \"none\"}-${selectedTimeframe}`;\r\n\r\n  // Debug changes to selectedTimeframe\r\n  useEffect(() => {\r\n    console.log(`LineChart: selectedTimeframe changed to ${selectedTimeframe}`);\r\n  }, [selectedTimeframe]);\r\n\r\n  // Debug changes to propTimeframe\r\n  useEffect(() => {\r\n    console.log(`LineChart: propTimeframe changed to ${propTimeframe}`);\r\n  }, [propTimeframe]);\r\n\r\n  // Debug changes to symbol prop\r\n  useEffect(() => {\r\n    console.log(`LineChart: symbol prop changed to ${symbol}`);\r\n  }, [symbol]);\r\n\r\n  // Reset state when chart key changes\r\n  useEffect(() => {\r\n    console.log(`LineChart: chartKey changed to ${chartKey}`);\r\n    if (chartRef.current) {\r\n      chartRef.current.remove();\r\n      chartRef.current = null;\r\n      seriesRef.current = null;\r\n    }\r\n    if (seriesRef.current) {\r\n      seriesRef.current = null;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    setIsShowingTriggeredAlert(false); // Reset triggered alert state\r\n    setIsUsingFallbackData(false); // Reset fallback data state\r\n  }, [chartKey]);\r\n\r\n  // Handle timeframe change\r\n  const handleTimeframeChange = useCallback(\r\n    (newTimeframe) => {\r\n      console.log(\r\n        `LineChart: Changing timeframe from ${selectedTimeframe} to ${newTimeframe}`\r\n      );\r\n\r\n      // Update local state\r\n      setSelectedTimeframe(newTimeframe);\r\n\r\n      // Notify parent component\r\n      if (onTimeframeChange) {\r\n        console.log(\"LineChart: Notifying parent of timeframe change\");\r\n        onTimeframeChange(newTimeframe);\r\n      } else {\r\n        console.warn(\"LineChart: No onTimeframeChange handler provided\");\r\n      }\r\n    },\r\n    [selectedTimeframe, onTimeframeChange]\r\n  );\r\n\r\n  // Effect to update selected timeframe when prop changes\r\n  useEffect(() => {\r\n    if (propTimeframe !== selectedTimeframe) {\r\n      console.log(\r\n        `LineChart: Updating selectedTimeframe from ${selectedTimeframe} to ${propTimeframe} (from props)`\r\n      );\r\n      setSelectedTimeframe(propTimeframe);\r\n    }\r\n  }, [propTimeframe, selectedTimeframe]);\r\n\r\n  useEffect(() => {\r\n    if (!symbol || !containerRef.current) return;\r\n\r\n    const fetchDataAndRenderChart = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        // Get the limit for the selected timeframe\r\n        const limit = currentTimeframeConfig.limit;\r\n\r\n        // Ensure symbol is a string, not an object\r\n        const symbolStr =\r\n          typeof symbol === \"object\"\r\n            ? symbol.symbol || \"BTCUSDT\" // Extract symbol property if it's an object\r\n            : String(symbol); // Convert to string otherwise\r\n\r\n        console.log(\r\n          `Fetching data for ${symbolStr} (${selectedTimeframe}), limit: ${limit}...`\r\n        );\r\n        const apiUrl = `/api/crypto/${symbolStr}/chart?timeframe=${selectedTimeframe}&limit=${limit}`;\r\n        console.log(\"📊 Chart API URL:\", apiUrl);\r\n        const response = await fetch(apiUrl);\r\n\r\n        if (!response.ok) {\r\n          console.error(\r\n            \"📊 Chart API Error:\",\r\n            response.status,\r\n            response.statusText\r\n          );\r\n          throw new Error(\r\n            `API error: ${response.status} - ${response.statusText}`\r\n          );\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(\"📊 Chart API Response:\", data);\r\n\r\n        if (!data || data.length === 0) {\r\n          setError(\"No data available\");\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        // Check if we're using fallback data\r\n        if (data._fallback) {\r\n          console.warn(\r\n            \"⚠️ Using fallback chart data due to API connectivity issues\"\r\n          );\r\n          setIsUsingFallbackData(true);\r\n        } else {\r\n          setIsUsingFallbackData(false);\r\n        }\r\n\r\n        console.log(`Received ${data.length} data points for ${symbol}`);\r\n\r\n        // Clean up previous chart if it exists\r\n        if (chartRef.current) {\r\n          console.log(\"Removing previous chart\");\r\n          chartRef.current.remove();\r\n          chartRef.current = null;\r\n          seriesRef.current = null;\r\n        }\r\n\r\n        console.log(\"Creating new line chart\");\r\n\r\n        // Create chart using named import style\r\n        const chart = createChart(containerRef.current, {\r\n          width: containerRef.current.clientWidth,\r\n          height: 400,\r\n          layout: {\r\n            background: { color: \"#222\" },\r\n            textColor: \"#DDD\",\r\n          },\r\n          grid: {\r\n            vertLines: { color: \"transparent\" },\r\n            horzLines: { color: \"transparent\" },\r\n          },\r\n          timeScale: {\r\n            timeVisible: true,\r\n            borderColor: \"#444\",\r\n          },\r\n        });\r\n\r\n        chartRef.current = chart;\r\n\r\n        // Create line series using addSeries with LineSeries\r\n        const series = chart.addSeries(LineSeries, {\r\n          color: \"#2962FF\",\r\n          lineWidth: 2,\r\n          crosshairMarkerVisible: true,\r\n          crosshairMarkerRadius: 6,\r\n        });\r\n\r\n        seriesRef.current = series;\r\n\r\n        // Debug the incoming data\r\n        console.log(\r\n          `Processing ${data.length} data points for timeframe ${selectedTimeframe}`\r\n        );\r\n        console.log(\r\n          \"Sample timestamps:\",\r\n          data.slice(0, 5).map((item) => item.time)\r\n        );\r\n\r\n        // Format data based on timeframe\r\n        // For shorter timeframes (< 1h), we need more precise time format\r\n        let formattedData = data.map((item) => {\r\n          // Convert timestamp to appropriate format based on timeframe\r\n          let dateObj;\r\n          if (typeof item.time === \"number\") {\r\n            dateObj = new Date(item.time * 1000); // If seconds timestamp\r\n            if (!isFinite(dateObj)) {\r\n              // If milliseconds timestamp\r\n              dateObj = new Date(item.time);\r\n            }\r\n          } else {\r\n            dateObj = new Date(item.time);\r\n          }\r\n\r\n          // Always use YYYY-MM-DD format as required by Lightweight Charts\r\n          const year = dateObj.getFullYear();\r\n          const month = String(dateObj.getMonth() + 1).padStart(2, \"0\");\r\n          const day = String(dateObj.getDate()).padStart(2, \"0\");\r\n          const timeString = `${year}-${month}-${day}`;\r\n\r\n          return {\r\n            time: timeString,\r\n            value: Number(item.close),\r\n            originalTime: item.time, // Keep original for debugging\r\n          };\r\n        });\r\n\r\n        // Remove duplicates by time value - keep the latest entry for each timestamp\r\n        const timeMap = new Map();\r\n        for (const item of formattedData) {\r\n          // For each day, keep the last value\r\n          timeMap.set(item.time, item);\r\n        }\r\n        formattedData = Array.from(timeMap.values());\r\n\r\n        // Sort by time string to ensure ascending order\r\n        formattedData.sort((a, b) => a.time.localeCompare(b.time));\r\n\r\n        // Debug the processed data\r\n        console.log(\r\n          \"Processed data (after deduplication):\",\r\n          formattedData.length,\r\n          \"items, first 5:\",\r\n          formattedData.slice(0, 5)\r\n        );\r\n\r\n        console.log(\"Using strict YYYY-MM-DD format for all data points\");\r\n\r\n        // Remove debug property before sending to chart\r\n        formattedData = formattedData.map(({ time, value }) => ({\r\n          time,\r\n          value,\r\n        }));\r\n\r\n        // Set data\r\n        series.setData(formattedData);\r\n\r\n        // Fit content\r\n        chart.timeScale().fitContent();\r\n\r\n        console.log(\"Line chart rendered successfully\");\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Chart error:\", err);\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDataAndRenderChart();\r\n\r\n    // Clean up on unmount\r\n    return () => {\r\n      if (chartRef.current) {\r\n        try {\r\n          chartRef.current.remove();\r\n          chartRef.current = null;\r\n          seriesRef.current = null;\r\n        } catch (err) {\r\n          console.error(\"Error removing chart:\", err);\r\n        }\r\n      }\r\n    };\r\n  }, [symbol, selectedTimeframe, currentTimeframeConfig]);\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        p: { xs: 1, sm: 2 },\r\n        mb: 2,\r\n        bgcolor: \"background.paper\",\r\n        borderRadius: 2,\r\n      }}\r\n    >\r\n      {/* Timeframe Buttons */}\r\n      {symbol && (\r\n        <Box\r\n          sx={{\r\n            mb: 2,\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {/* Left side - Price, Time, Date, Symbol and Volume */}\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-start\",\r\n              gap: 0.5,\r\n            }}\r\n          >\r\n            {/* Symbol and Volume */}\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}>\r\n              <Typography\r\n                variant=\"body2\"\r\n                sx={{ color: \"#E2E8F0\", fontWeight: \"bold\" }}\r\n              >\r\n                {symbol}\r\n              </Typography>\r\n              {isUsingFallbackData && (\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  sx={{\r\n                    color: \"#F59E0B\",\r\n                    fontSize: \"0.6rem\",\r\n                    bgcolor: \"rgba(245, 158, 11, 0.1)\",\r\n                    px: 1,\r\n                    py: 0.25,\r\n                    borderRadius: 1,\r\n                    border: \"1px solid rgba(245, 158, 11, 0.3)\",\r\n                  }}\r\n                >\r\n                  ⚠️ DEMO DATA\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n            {latestAlert && (\r\n              <Typography\r\n                variant=\"caption\"\r\n                sx={{\r\n                  color: \"#94A3B8\",\r\n                  fontWeight: \"normal\",\r\n                }}\r\n              >\r\n                Volume (24h): $\r\n                {formatNumber(latestAlert.marketData?.volume || 0)}\r\n                {latestAlert.symbol === symbol}\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n          {/* Right side - Timeframe Buttons */}\r\n          <ButtonGroup\r\n            size=\"small\"\r\n            aria-label=\"timeframe selection\"\r\n            sx={{\r\n              \"& .MuiButton-root\": {\r\n                minWidth: \"50px\",\r\n                fontSize: \"0.75rem\",\r\n                py: 0.5,\r\n              },\r\n            }}\r\n          >\r\n            {TIMEFRAMES.map((tf) => (\r\n              <Button\r\n                key={tf.value}\r\n                onClick={() => handleTimeframeChange(tf.value)}\r\n                variant={\r\n                  selectedTimeframe === tf.value ? \"contained\" : \"outlined\"\r\n                }\r\n              >\r\n                {tf.label}\r\n              </Button>\r\n            ))}\r\n          </ButtonGroup>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Chart */}\r\n      <Box\r\n        ref={containerRef}\r\n        sx={{\r\n          width: \"100%\",\r\n          height: { xs: 250, sm: 300, md: 400 },\r\n          bgcolor: \"#222\",\r\n          position: \"relative\",\r\n          borderRadius: 1,\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          border: isShowingTriggeredAlert\r\n            ? \"2px solid #10B981\"\r\n            : \"2px solid transparent\",\r\n          boxShadow: isShowingTriggeredAlert\r\n            ? \"0 0 20px rgba(16, 185, 129, 0.3)\"\r\n            : \"none\",\r\n          transition: \"all 0.3s ease-in-out\",\r\n        }}\r\n      >\r\n        {loading && (\r\n          <CircularProgress\r\n            size={isMobile ? 30 : 40}\r\n            sx={{ color: \"primary.main\" }}\r\n          />\r\n        )}\r\n\r\n        {!loading && error && (\r\n          <Typography\r\n            color=\"error\"\r\n            sx={{\r\n              p: 2,\r\n              fontSize: { xs: \"0.875rem\", sm: \"1rem\" },\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {error}\r\n          </Typography>\r\n        )}\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          mt: 1,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {/* Left side - Alert Details */}\r\n        {latestAlert && latestAlert.conditionDetails && (\r\n          <Box>\r\n            <Typography\r\n              variant=\"caption\"\r\n              sx={{\r\n                color: \"#94A3B8\",\r\n                fontSize: \"0.7rem\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                gap: 0.5,\r\n              }}\r\n            >\r\n              🚨 Alert Triggered - {latestAlert.symbol}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{ color: \"#E2E8F0\", fontWeight: \"bold\", fontSize: \"0.8rem\" }}\r\n            >\r\n              Target: {latestAlert.conditionDetails.targetValue} | Actual:{\" \"}\r\n              {latestAlert.conditionDetails.actualValue} | Timeframe:{\" \"}\r\n              {latestAlert.conditionDetails.timeframe}\r\n            </Typography>\r\n            {/* {latestAlert.conditionDetails.description && (\r\n              <Typography\r\n                variant=\"caption\"\r\n                sx={{\r\n                  color: \"#10B981\",\r\n                  fontSize: \"0.65rem\",\r\n                  display: \"block\",\r\n                  mt: 0.5,\r\n                }}\r\n              >\r\n                {latestAlert.conditionDetails.description}\r\n              </Typography>\r\n            )} */}\r\n          </Box>\r\n        )}\r\n\r\n        {/* Right side - Price, Time, Date, Volume */}\r\n        <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\r\n          {/* Last Price */}\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"caption\"\r\n              sx={{ color: \"#94A3B8\", fontSize: \"0.7rem\" }}\r\n            >\r\n              Last Price\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                color: \"#E2E8F0\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"0.8rem\",\r\n              }}\r\n            >\r\n              $\r\n              {livePrice ||\r\n                latestAlert?.marketData?.price ||\r\n                latestAlert?.conditionDetails?.actualValue ||\r\n                \"0.0000\"}\r\n            </Typography>\r\n            {/* {latestAlert?.marketData?.priceChangePercent24h && (\r\n              <Typography\r\n                variant=\"caption\"\r\n                sx={{\r\n                  color:\r\n                    latestAlert.marketData.priceChangePercent24h >= 0\r\n                      ? \"#10B981\"\r\n                      : \"#EF4444\",\r\n                  fontSize: \"0.65rem\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {latestAlert.marketData.priceChangePercent24h >= 0 ? \"+\" : \"\"}\r\n                {latestAlert.marketData.priceChangePercent24h.toFixed(2)}%\r\n              </Typography>\r\n            )} */}\r\n          </Box>\r\n\r\n          {/* Divider */}\r\n          <Typography variant=\"body2\" sx={{ color: \"#E2E8F0\" }}>\r\n            |\r\n          </Typography>\r\n\r\n          {/* Time */}\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"caption\"\r\n              sx={{ color: \"#94A3B8\", fontSize: \"0.7rem\" }}\r\n            >\r\n              Time\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                color: \"#E2E8F0\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"0.8rem\",\r\n              }}\r\n            >\r\n              {latestAlert\r\n                ? format(new Date(latestAlert.triggeredAt), \"HH:mm:ss\")\r\n                : \"00:00:00\"}\r\n            </Typography>\r\n          </Box>\r\n\r\n          {/* Divider */}\r\n          <Typography variant=\"body2\" sx={{ color: \"#E2E8F0\" }}>\r\n            |\r\n          </Typography>\r\n\r\n          {/* Date */}\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"caption\"\r\n              sx={{ color: \"#94A3B8\", fontSize: \"0.7rem\" }}\r\n            >\r\n              Date\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                color: \"#E2E8F0\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"0.8rem\",\r\n              }}\r\n            >\r\n              {latestAlert\r\n                ? format(new Date(latestAlert.triggeredAt), \"MMM dd, yyyy\")\r\n                : \"Jan 01, 2025\"}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React from 'react';\r\nimport { Fade, Slide, Grow, Collapse, Box } from '@mui/material';\r\n\r\n// Smooth transition wrapper for components\r\nconst SmoothTransition = ({ \r\n  children, \r\n  type = 'fade', \r\n  direction = 'up',\r\n  timeout = 300,\r\n  in: inProp = true,\r\n  ...props \r\n}) => {\r\n  const transitionProps = {\r\n    in: inProp,\r\n    timeout,\r\n    ...props\r\n  };\r\n\r\n  switch (type) {\r\n    case 'slide':\r\n      return (\r\n        <Slide direction={direction} {...transitionProps}>\r\n          <Box>{children}</Box>\r\n        </Slide>\r\n      );\r\n    case 'grow':\r\n      return (\r\n        <Grow {...transitionProps}>\r\n          <Box>{children}</Box>\r\n        </Grow>\r\n      );\r\n    case 'collapse':\r\n      return (\r\n        <Collapse {...transitionProps}>\r\n          <Box>{children}</Box>\r\n        </Collapse>\r\n      );\r\n    case 'fade':\r\n    default:\r\n      return (\r\n        <Fade {...transitionProps}>\r\n          <Box>{children}</Box>\r\n        </Fade>\r\n      );\r\n  }\r\n};\r\n\r\nexport default SmoothTransition;\r\n","import { useCallback, useRef } from 'react';\r\n\r\n// Debounce hook for API calls\r\nexport const useDebounce = (callback, delay) => {\r\n  const timeoutRef = useRef(null);\r\n  \r\n  return useCallback((...args) => {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n    \r\n    timeoutRef.current = setTimeout(() => {\r\n      callback(...args);\r\n    }, delay);\r\n  }, [callback, delay]);\r\n};\r\n\r\n// Throttle hook for frequent API calls\r\nexport const useThrottle = (callback, limit) => {\r\n  const inThrottle = useRef(false);\r\n  \r\n  return useCallback((...args) => {\r\n    if (!inThrottle.current) {\r\n      callback(...args);\r\n      inThrottle.current = true;\r\n      setTimeout(() => {\r\n        inThrottle.current = false;\r\n      }, limit);\r\n    }\r\n  }, [callback, limit]);\r\n};\r\n\r\n// Request queue manager to prevent overwhelming the server\r\nclass RequestQueue {\r\n  constructor(maxConcurrent = 3) {\r\n    this.queue = [];\r\n    this.running = [];\r\n    this.maxConcurrent = maxConcurrent;\r\n  }\r\n\r\n  async add(requestFunction) {\r\n    return new Promise((resolve, reject) => {\r\n      this.queue.push({ requestFunction, resolve, reject });\r\n      this.process();\r\n    });\r\n  }\r\n\r\n  async process() {\r\n    if (this.running.length >= this.maxConcurrent || this.queue.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const { requestFunction, resolve, reject } = this.queue.shift();\r\n    const request = { requestFunction, resolve, reject };\r\n    this.running.push(request);\r\n\r\n    try {\r\n      const result = await requestFunction();\r\n      resolve(result);\r\n    } catch (error) {\r\n      reject(error);\r\n    } finally {\r\n      this.running = this.running.filter(r => r !== request);\r\n      this.process(); // Process next item in queue\r\n    }\r\n  }\r\n}\r\n\r\n// Global request queue instance\r\nexport const requestQueue = new RequestQueue(2); // Limit to 2 concurrent requests\r\n\r\n// Hook to use the request queue\r\nexport const useRequestQueue = () => {\r\n  return useCallback((requestFunction) => {\r\n    return requestQueue.add(requestFunction);\r\n  }, []);\r\n};\r\n","import React, {\r\n  useState,\r\n  useRef,\r\n  useEffect,\r\n  useMemo,\r\n  memo,\r\n  useCallback,\r\n} from \"react\";\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  InputBase,\r\n  ToggleButtonGroup,\r\n  ToggleButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  Chip,\r\n  IconButton,\r\n  alpha,\r\n  Skeleton,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Button,\r\n  useTheme,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ManageSearchIcon from \"@mui/icons-material/ManageSearch\";\r\nimport TrendingUpIcon from \"@mui/icons-material/TrendingUp\";\r\nimport TrendingDownIcon from \"@mui/icons-material/TrendingDown\";\r\nimport NotificationsActiveIcon from \"@mui/icons-material/NotificationsActive\";\r\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\r\nimport CurrencyExchangeIcon from \"@mui/icons-material/CurrencyExchange\";\r\nimport { useCrypto } from \"../context/CryptoContext\";\r\nimport { useFilters } from \"../context/FilterContext\";\r\nimport { useAlert } from \"../context/AlertContext\";\r\nimport { useSelectedPairs } from \"../context/SelectedPairsContext\";\r\nimport SmoothTransition from \"./SmoothTransition\";\r\nimport { useDebounce, useThrottle } from \"../utils/requestThrottle\";\r\n\r\nconst MarketPanel = ({\r\n  onSelectCoin,\r\n  onCreateAlert,\r\n  onAlertsCreated,\r\n  onRef,\r\n}) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const isTablet = useMediaQuery(theme.breakpoints.down(\"lg\"));\r\n\r\n  const {\r\n    cryptos,\r\n    error,\r\n    toggleFavorite,\r\n    batchToggleFavorites,\r\n    isFavorite,\r\n    getFavoriteSymbols,\r\n    isOperationPending,\r\n    clearAllFavorites,\r\n    checkAlertConditions,\r\n    loadCryptos,\r\n  } = useCrypto();\r\n  const { filters, getValidationFilters, hasActiveFilters } = useFilters();\r\n  const { alerts, deleteAlert } = useAlert(); // Import to get active alerts and delete function\r\n  const { togglePairSelection, isPairSelected } = useSelectedPairs();\r\n  const [view, setView] = useState(\"market\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const searchTimeoutRef = useRef(null);\r\n  // Remove unused state since we're using useMemo now\r\n  // const [filteredCryptos, setFilteredCryptos] = useState([]);\r\n  const [meetingConditions, setMeetingConditions] = useState({});\r\n  const [, setCheckingConditions] = useState(false);\r\n  const [selectAllChecked, setSelectAllChecked] = useState(false);\r\n  const [checkedPairs, setCheckedPairs] = useState(new Set());\r\n  const [isResettingFavorites, setIsResettingFavorites] = useState(false);\r\n  const [isDeletingAllAlerts, setIsDeletingAllAlerts] = useState(false);\r\n  const [deletingAlertId, setDeletingAlertId] = useState(null);\r\n\r\n  // Throttled condition checking to prevent API spam\r\n  const checkConditionsThrottled = useCallback(async () => {\r\n    if (!hasActiveFilters) {\r\n      setMeetingConditions({});\r\n      return;\r\n    }\r\n\r\n    setCheckingConditions(true);\r\n    const results = {};\r\n\r\n    const validationFilters = getValidationFilters();\r\n    const coinList =\r\n      view === \"favorites\"\r\n        ? cryptos.filter((crypto) => isFavorite(crypto.symbol))\r\n        : cryptos;\r\n\r\n    if (!coinList || coinList.length === 0) {\r\n      setCheckingConditions(false);\r\n      return;\r\n    }\r\n\r\n    // Get symbols with active alerts only\r\n    const alertSymbols = new Set(\r\n      alerts.filter((alert) => alert.isActive).map((alert) => alert.symbol)\r\n    );\r\n\r\n    // Only check conditions for coins that have active alerts\r\n    const coinsWithAlerts = coinList.filter((coin) =>\r\n      alertSymbols.has(coin.symbol)\r\n    );\r\n\r\n    console.log(\r\n      `Checking conditions for ${coinsWithAlerts.length} coins with active alerts:`,\r\n      coinsWithAlerts.map((c) => c.symbol)\r\n    );\r\n\r\n    if (coinsWithAlerts.length === 0) {\r\n      setMeetingConditions({});\r\n      setCheckingConditions(false);\r\n      return;\r\n    }\r\n\r\n    console.log(\"Validation filters:\", validationFilters);\r\n\r\n    // Process in batches to avoid too many simultaneous requests\r\n    const batchSize = 5;\r\n    for (let i = 0; i < coinsWithAlerts.length; i += batchSize) {\r\n      const batch = coinsWithAlerts.slice(i, i + batchSize);\r\n      const promises = batch.map((coin) =>\r\n        checkAlertConditions(coin.symbol, validationFilters)\r\n          .then((result) => {\r\n            results[coin.symbol] = result.meetsConditions;\r\n            return result;\r\n          })\r\n          .catch((err) => {\r\n            console.error(`Error checking conditions for ${coin.symbol}:`, err);\r\n            results[coin.symbol] = false;\r\n            return { meetsConditions: false };\r\n          })\r\n      );\r\n\r\n      await Promise.all(promises);\r\n    }\r\n\r\n    setMeetingConditions(results);\r\n    setCheckingConditions(false);\r\n  }, [\r\n    getValidationFilters,\r\n    checkAlertConditions,\r\n    alerts,\r\n    view,\r\n    cryptos,\r\n    hasActiveFilters,\r\n    isFavorite,\r\n  ]);\r\n\r\n  // Apply throttling to condition checking (max once per 2 seconds)\r\n  const checkConditions = useThrottle(checkConditionsThrottled, 2000);\r\n\r\n  /* Filter functionality is handled directly in the component through the context */\r\n\r\n  // Load active USDT pairs only\r\n  useEffect(() => {\r\n    // Always load only active USDT pairs\r\n    loadCryptos(1, 5000, false, true, true, true);\r\n  }, [loadCryptos, cryptos]);\r\n\r\n  // Memoized filtered cryptos for better performance\r\n  const filteredCryptos = useMemo(() => {\r\n    if (!cryptos) {\r\n      return [];\r\n    }\r\n\r\n    let filtered = [...cryptos];\r\n\r\n    // Show only active USDT pairs (always filter for USDT and TRADING status)\r\n    filtered = filtered.filter((crypto) => \r\n      crypto.symbol.endsWith(\"USDT\") && \r\n      crypto.isSpotTradingAllowed === true &&\r\n      crypto.status === \"TRADING\"\r\n    );\r\n\r\n    // Apply market/favorite filter\r\n    if (view === \"favorites\") {\r\n      filtered = filtered.filter((crypto) => isFavorite(crypto.symbol));\r\n    }\r\n\r\n    // Apply search filter\r\n    if (searchTerm.trim() !== \"\") {\r\n      const term = searchTerm.toLowerCase();\r\n      filtered = filtered.filter(\r\n        (crypto) =>\r\n          crypto.symbol.toLowerCase().includes(term) ||\r\n          (crypto.name && crypto.name.toLowerCase().includes(term))\r\n      );\r\n    }\r\n\r\n    // Remove duplicates based on symbol\r\n    const uniqueFiltered = filtered.filter(\r\n      (crypto, index, self) =>\r\n        index === self.findIndex((c) => c.symbol === crypto.symbol)\r\n    );\r\n\r\n    // Sort by market cap or volume\r\n    uniqueFiltered.sort((a, b) => {\r\n      // First sort by favorites using optimized lookup\r\n      const aIsFavorite = isFavorite(a.symbol);\r\n      const bIsFavorite = isFavorite(b.symbol);\r\n      if (aIsFavorite && !bIsFavorite) return -1;\r\n      if (!aIsFavorite && bIsFavorite) return 1;\r\n\r\n      // Then sort by volume\r\n      return b.volume - a.volume;\r\n    });\r\n\r\n    // Return all filtered items (no artificial limit)\r\n    return uniqueFiltered;\r\n  }, [cryptos, view, searchTerm, filters.pair, isFavorite]);\r\n\r\n  // Memoized total filtered count (before search and view filters)\r\n  const totalFilteredCount = useMemo(() => {\r\n    if (!cryptos) {\r\n      return 0;\r\n    }\r\n\r\n    let filtered = [...cryptos];\r\n\r\n    // Show only active USDT pairs (always filter for USDT and TRADING status)\r\n    filtered = filtered.filter((crypto) => \r\n      crypto.symbol.endsWith(\"USDT\") && \r\n      crypto.isSpotTradingAllowed === true &&\r\n      crypto.status === \"TRADING\"\r\n    );\r\n\r\n    // Remove duplicates based on symbol\r\n    const uniqueFiltered = filtered.filter(\r\n      (crypto, index, self) =>\r\n        index === self.findIndex((c) => c.symbol === crypto.symbol)\r\n    );\r\n\r\n    return uniqueFiltered.length;\r\n  }, [cryptos, filters.pair]);\r\n\r\n  // Handle select all checkbox\r\n  const handleSelectAll = useCallback(\r\n    (event) => {\r\n      const isChecked = event.target.checked;\r\n      setSelectAllChecked(isChecked);\r\n\r\n      if (isChecked) {\r\n        // Check all visible pairs\r\n        const visibleSymbols = filteredCryptos.map((crypto) => crypto.symbol);\r\n        setCheckedPairs(new Set(visibleSymbols));\r\n\r\n        // Batch add all to favorites and selection\r\n        const favoriteOperations = filteredCryptos\r\n          .filter((crypto) => !isFavorite(crypto.symbol))\r\n          .map((crypto) => ({ symbol: crypto.symbol, action: \"add\" }));\r\n\r\n        if (favoriteOperations.length > 0) {\r\n          batchToggleFavorites(favoriteOperations);\r\n        }\r\n\r\n        // Add to selection\r\n        filteredCryptos.forEach((crypto) => {\r\n          if (!isPairSelected(crypto.symbol)) {\r\n            togglePairSelection(crypto.symbol);\r\n          }\r\n        });\r\n\r\n        // Switch to favorites view when selecting all\r\n        if (view !== \"favorites\") {\r\n          setView(\"favorites\");\r\n        }\r\n      } else {\r\n        // Uncheck all visible pairs\r\n        const visibleSymbols = filteredCryptos.map((crypto) => crypto.symbol);\r\n        setCheckedPairs((prev) => {\r\n          const newSet = new Set(prev);\r\n          visibleSymbols.forEach((symbol) => newSet.delete(symbol));\r\n          return newSet;\r\n        });\r\n\r\n        // Batch remove all from favorites and selection\r\n        const removeOperations = filteredCryptos\r\n          .filter((crypto) => isFavorite(crypto.symbol))\r\n          .map((crypto) => ({ symbol: crypto.symbol, action: \"remove\" }));\r\n\r\n        if (removeOperations.length > 0) {\r\n          batchToggleFavorites(removeOperations);\r\n        }\r\n\r\n        // Remove from selection\r\n        filteredCryptos.forEach((crypto) => {\r\n          if (isPairSelected(crypto.symbol)) {\r\n            togglePairSelection(crypto.symbol);\r\n          }\r\n        });\r\n\r\n        // Switch back to market view when deselecting all\r\n        if (view === \"favorites\") {\r\n          setView(\"market\");\r\n        }\r\n      }\r\n    },\r\n    [\r\n      filteredCryptos,\r\n      batchToggleFavorites,\r\n      isFavorite,\r\n      isPairSelected,\r\n      togglePairSelection,\r\n      view,\r\n    ]\r\n  );\r\n\r\n  // Sync checked pairs with favorites when cryptos data changes\r\n  // Remove auto-selection - pairs should only be selected when explicitly checked\r\n  useEffect(() => {\r\n    if (cryptos && cryptos.length > 0) {\r\n      // Don't auto-select pairs - let user manually select them\r\n      // Only sync with existing favorites if they exist\r\n      const favoriteSymbols = getFavoriteSymbols();\r\n\r\n      const newCheckedPairs = new Set(favoriteSymbols);\r\n\r\n      // Only update if the set has actually changed to prevent unnecessary re-renders\r\n      setCheckedPairs((prev) => {\r\n        if (\r\n          prev.size !== newCheckedPairs.size ||\r\n          ![...prev].every((symbol) => newCheckedPairs.has(symbol))\r\n        ) {\r\n          return newCheckedPairs;\r\n        }\r\n        return prev; // No change needed\r\n      });\r\n    }\r\n  }, [cryptos, getFavoriteSymbols]);\r\n\r\n  // Update select all checkbox based on checked pairs\r\n  useEffect(() => {\r\n    const visibleSymbols = filteredCryptos.map((crypto) => crypto.symbol);\r\n    const checkedVisibleCount = visibleSymbols.filter((symbol) =>\r\n      checkedPairs.has(symbol)\r\n    ).length;\r\n    const totalVisible = visibleSymbols.length;\r\n\r\n    if (checkedVisibleCount === 0) {\r\n      setSelectAllChecked(false);\r\n    } else if (checkedVisibleCount === totalVisible && totalVisible > 0) {\r\n      setSelectAllChecked(true);\r\n    } else {\r\n      setSelectAllChecked(false);\r\n    }\r\n  }, [checkedPairs, filteredCryptos]);\r\n\r\n  // Check conditions when filtered data changes (debounced)\r\n  const debouncedCheckConditions = useDebounce(() => {\r\n    if (hasActiveFilters) {\r\n      checkConditions(); // Check conditions for coins with alerts\r\n    } else {\r\n      setMeetingConditions({});\r\n    }\r\n  }, 1000);\r\n\r\n  useEffect(() => {\r\n    debouncedCheckConditions();\r\n  }, [hasActiveFilters, debouncedCheckConditions]);\r\n\r\n  // Memoized view change handler\r\n  const handleViewChange = useCallback((event, newView) => {\r\n    if (newView !== null) {\r\n      setView(newView);\r\n    }\r\n  }, []);\r\n\r\n  // Memoized search handler with debounce\r\n  const handleSearchChange = useCallback((event) => {\r\n    const value = event.target.value;\r\n    setSearchInput(value); // Immediately update input display\r\n\r\n    // Clear previous timeout\r\n    if (searchTimeoutRef.current) {\r\n      clearTimeout(searchTimeoutRef.current);\r\n    }\r\n\r\n    // Set new timeout for debouncing the actual search\r\n    searchTimeoutRef.current = setTimeout(() => {\r\n      setSearchTerm(value);\r\n    }, 300);\r\n  }, []);\r\n\r\n  // Removed handleLoadMore function - loading all pairs at once\r\n\r\n  // Handle reset all favorites\r\n  const handleResetFavorites = useCallback(async () => {\r\n    try {\r\n      setIsResettingFavorites(true);\r\n      await clearAllFavorites();\r\n\r\n      // Clear checked pairs and switch to market view\r\n      setCheckedPairs(new Set());\r\n      setSelectAllChecked(false);\r\n      setView(\"market\");\r\n\r\n      console.log(\"All favorites reset successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error resetting favorites:\", error);\r\n    } finally {\r\n      setIsResettingFavorites(false);\r\n    }\r\n  }, [clearAllFavorites]);\r\n\r\n  // Handle delete all alerts\r\n  const handleDeleteAllAlerts = useCallback(async () => {\r\n    try {\r\n      setIsDeletingAllAlerts(true);\r\n\r\n      if (!alerts || alerts.length === 0) {\r\n        console.log(\"No alerts to delete\");\r\n        return;\r\n      }\r\n\r\n      // Delete all alerts\r\n      const deletePromises = alerts.map((alert) => deleteAlert(alert._id));\r\n      await Promise.all(deletePromises);\r\n\r\n      console.log(\"All alerts deleted successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting all alerts:\", error);\r\n    } finally {\r\n      setIsDeletingAllAlerts(false);\r\n    }\r\n  }, [alerts, deleteAlert]);\r\n\r\n  // Handle delete individual alert\r\n  const handleDeleteAlert = useCallback(\r\n    async (alertId, symbol) => {\r\n      try {\r\n        setDeletingAlertId(alertId);\r\n        await deleteAlert(alertId);\r\n\r\n        // Also remove from favorites if it's in favorites\r\n        if (isFavorite(symbol)) {\r\n          await toggleFavorite(symbol);\r\n        }\r\n\r\n        console.log(`Alert deleted successfully for ${symbol}`);\r\n      } catch (error) {\r\n        console.error(`Error deleting alert for ${symbol}:`, error);\r\n      } finally {\r\n        setDeletingAlertId(null);\r\n      }\r\n    },\r\n    [deleteAlert, isFavorite, toggleFavorite]\r\n  );\r\n\r\n  // Expose functions to parent via callback\r\n  useEffect(() => {\r\n    if (onRef) {\r\n      onRef({});\r\n    }\r\n  }, [onRef]);\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        p: { xs: 1, sm: 2 },\r\n        borderRadius: { xs: 1, sm: 2 },\r\n        bgcolor: \"background.paper\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {/* Debug information banner */}\r\n      {error && (\r\n        <Box\r\n          sx={{\r\n            mb: 1,\r\n            p: 1,\r\n            bgcolor: \"error.main\",\r\n            color: \"white\",\r\n            borderRadius: 1,\r\n            fontSize: \"0.75rem\",\r\n          }}\r\n        >\r\n          Error:{\" \"}\r\n          {typeof error === \"string\"\r\n            ? error\r\n            : \"Failed to fetch crypto data. Check server connection.\"}\r\n        </Box>\r\n      )}\r\n      {/* Filter Status Indicator with Counts */}\r\n      <Box\r\n        sx={{\r\n          mb: 1,\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          gap: 1,\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Typography variant=\"caption\" sx={{ color: \"text.secondary\" }}>\r\n          Showing: {filters.pair?.USDT ? \"USDT pairs only\" : \"All SPOT pairs\"}\r\n        </Typography>\r\n        {filters.pair?.USDT ? (\r\n          <Chip\r\n            label={`USDT ${totalFilteredCount}`}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            sx={{ fontSize: \"0.7rem\", height: \"20px\" }}\r\n          />\r\n        ) : (\r\n          <Chip\r\n            label={`SPOT ${totalFilteredCount}`}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            sx={{ fontSize: \"0.7rem\", height: \"20px\" }}\r\n          />\r\n        )}\r\n       \r\n        {checkedPairs.size > 0 && (\r\n          <Chip\r\n            label={`${checkedPairs.size} Selected`}\r\n            size=\"small\"\r\n            color=\"warning\"\r\n            variant=\"outlined\"\r\n            sx={{ fontSize: \"0.7rem\", height: \"20px\" }}\r\n          />\r\n        )}\r\n      </Box>\r\n\r\n      {/* Counts Display */}\r\n      {/* <Box\r\n        sx={{\r\n          mb: 2,\r\n          p: { xs: 1, sm: 1.5 },\r\n          bgcolor: alpha(\"#1E293B\", 0.3),\r\n          borderRadius: 1,\r\n          border: \"1px solid rgba(59, 130, 246, 0.2)\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            flexDirection: { xs: \"column\", sm: \"row\" },\r\n            gap: { xs: 1, sm: 0 },\r\n          }}\r\n        >\r\n          <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 0.5 }}>\r\n            <Typography\r\n              variant=\"caption\"\r\n              sx={{ color: \"#94A3B8\", fontSize: \"0.7rem\" }}\r\n            >\r\n              Total Filtered\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h6\"\r\n              sx={{ color: \"#60A5FA\", fontWeight: \"bold\" }}\r\n            >\r\n              {totalFilteredCount}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              gap: 0.5,\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"caption\"\r\n              sx={{ color: \"#94A3B8\", fontSize: \"0.7rem\" }}\r\n            >\r\n              Currently Showing\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h6\"\r\n              sx={{ color: \"#22C55E\", fontWeight: \"bold\" }}\r\n            >\r\n              {filteredCryptos.length}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              gap: 0.5,\r\n              alignItems: \"flex-end\",\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"caption\"\r\n              sx={{ color: \"#94A3B8\", fontSize: \"0.7rem\" }}\r\n            >\r\n              Selected\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h6\"\r\n              sx={{ color: \"#F59E0B\", fontWeight: \"bold\" }}\r\n            >\r\n              {checkedPairs.size}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box> */}\r\n\r\n      {/* Toggle buttons for Market/Favorites/Alert Generated */}\r\n      <ToggleButtonGroup\r\n        value={view}\r\n        exclusive\r\n        onChange={handleViewChange}\r\n        aria-label=\"market view\"\r\n        fullWidth\r\n        sx={{\r\n          mb: 2,\r\n          \"& .MuiToggleButton-root\": {\r\n            fontSize: { xs: \"0.75rem\", sm: \"0.875rem\" },\r\n            py: { xs: 0.5, sm: 1 },\r\n            px: { xs: 0.5, sm: 1.5 },\r\n          },\r\n        }}\r\n      >\r\n        <ToggleButton value=\"market\" aria-label=\"market\">\r\n          {isMobile ? \"Market\" : \"Market\"}\r\n        </ToggleButton>\r\n        <ToggleButton value=\"favorites\" aria-label=\"favorites\">\r\n          {isMobile ? \"Favs\" : \"Favorites\"}\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n\r\n      {/* Reset Favorites Button - only show when in favorites view and has favorites */}\r\n      {view === \"favorites\" && getFavoriteSymbols().length > 0 && (\r\n        <Box sx={{ mb: 2, display: \"flex\", justifyContent: \"center\" }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n            size=\"small\"\r\n            onClick={handleResetFavorites}\r\n            disabled={isResettingFavorites}\r\n            sx={{\r\n              borderRadius: \"20px\",\r\n              textTransform: \"none\",\r\n              px: 2,\r\n              py: 0.5,\r\n              fontSize: \"0.75rem\",\r\n              borderColor: \"rgba(244, 67, 54, 0.5)\",\r\n              color: \"#f44336\",\r\n              \"&:hover\": {\r\n                borderColor: \"#f44336\",\r\n                backgroundColor: \"rgba(244, 67, 54, 0.1)\",\r\n              },\r\n              \"&:disabled\": {\r\n                opacity: 0.5,\r\n              },\r\n            }}\r\n          >\r\n            {isResettingFavorites ? \"Resetting...\" : \"🗑️ Clear All Favorites\"}\r\n          </Button>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Search input */}\r\n      <Box\r\n        sx={{\r\n          p: \"2px 4px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n          bgcolor: alpha(\"#000\", 0.1),\r\n          borderRadius: 1,\r\n          mb: 2,\r\n        }}\r\n      >\r\n        <InputBase\r\n          sx={{ ml: 1, flex: 1 }}\r\n          placeholder=\"Search Coins\"\r\n          value={searchInput}\r\n          onChange={handleSearchChange}\r\n        />\r\n        <IconButton type=\"button\" sx={{ p: \"10px\" }} aria-label=\"search\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      {/* Select All Checkbox */}\r\n      {filteredCryptos.length > 0 && (\r\n        <Box sx={{ p: 2, borderBottom: \"1px solid rgba(255, 255, 255, 0.1)\" }}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={selectAllChecked}\r\n                onChange={handleSelectAll}\r\n                sx={{ color: view === \"favorites\" ? \"#FFD700\" : \"#60A5FA\" }}\r\n              />\r\n            }\r\n            label={\r\n              <Typography variant=\"body2\" sx={{ color: \"#E2E8F0\" }}>\r\n                Select All\r\n              </Typography>\r\n            }\r\n          />\r\n        </Box>\r\n      )}\r\n\r\n      {/* Crypto list */}\r\n      <SmoothTransition type=\"slide\" direction=\"up\" timeout={400}>\r\n        <List\r\n          sx={{\r\n            flexGrow: 1,\r\n            overflow: \"auto\",\r\n            p: 0,\r\n            maxHeight: \"calc(100vh - 300px)\",\r\n            \"&::-webkit-scrollbar\": {\r\n              width: \"6px\",\r\n            },\r\n            \"&::-webkit-scrollbar-track\": {\r\n              background: \"rgba(255, 255, 255, 0.1)\",\r\n              borderRadius: \"3px\",\r\n            },\r\n            \"&::-webkit-scrollbar-thumb\": {\r\n              background: \"rgba(255, 255, 255, 0.3)\",\r\n              borderRadius: \"3px\",\r\n              \"&:hover\": {\r\n                background: \"rgba(255, 255, 255, 0.5)\",\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          {/* Only show error states, not loading states */}\r\n          {error ? (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                p: 3,\r\n              }}\r\n            >\r\n              <ErrorOutlineIcon color=\"error\" sx={{ fontSize: 48, mb: 2 }} />\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                align=\"center\"\r\n                color=\"error\"\r\n                gutterBottom\r\n              >\r\n                Error Loading Data\r\n              </Typography>\r\n              <Typography\r\n                align=\"center\"\r\n                variant=\"body2\"\r\n                color=\"error\"\r\n                sx={{ mt: 1 }}\r\n              >\r\n                {error}\r\n              </Typography>\r\n            </Box>\r\n          ) : filteredCryptos.length === 0 ? (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                p: 3,\r\n              }}\r\n            >\r\n              <ManageSearchIcon\r\n                sx={{ fontSize: 48, mb: 2, color: \"text.secondary\" }}\r\n              />\r\n              <Typography align=\"center\" variant=\"body2\" color=\"text.secondary\">\r\n                {view === \"favorites\"\r\n                  ? \"You have no favorite coins yet\"\r\n                  : \"No coins match your search criteria\"}\r\n              </Typography>\r\n            </Box>\r\n          ) : !cryptos ? (\r\n            <SmoothTransition type=\"fade\" timeout={500}>\r\n              <Box>\r\n                {[...Array(10)].map((_, index) => (\r\n                  <Box key={index} sx={{ p: 1 }}>\r\n                    <Skeleton\r\n                      variant=\"rectangular\"\r\n                      height={60}\r\n                      sx={{ borderRadius: 1, mb: 1 }}\r\n                    />\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </SmoothTransition>\r\n          ) : cryptos.length === 0 ? (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                p: 3,\r\n              }}\r\n            >\r\n              <CurrencyExchangeIcon\r\n                sx={{ fontSize: 48, mb: 2, color: \"text.secondary\" }}\r\n              />\r\n              <Typography\r\n                align=\"center\"\r\n                variant=\"subtitle1\"\r\n                color=\"text.secondary\"\r\n              >\r\n                No Market Data Available\r\n              </Typography>\r\n              <Typography\r\n                align=\"center\"\r\n                variant=\"body2\"\r\n                color=\"text.secondary\"\r\n                sx={{ mt: 1 }}\r\n              >\r\n                Unable to load cryptocurrency data from the server.\r\n              </Typography>\r\n              <Typography\r\n                align=\"center\"\r\n                variant=\"body2\"\r\n                color=\"text.secondary\"\r\n                sx={{ mt: 1 }}\r\n              >\r\n                Please check that the API server is running correctly.\r\n              </Typography>\r\n            </Box>\r\n          ) : (\r\n            filteredCryptos.map((crypto, index) => (\r\n              <React.Fragment key={crypto.symbol}>\r\n                <ListItem\r\n                  sx={{\r\n                    py: { xs: 0.5, sm: 1 },\r\n                    px: { xs: 0.5, sm: 1 },\r\n                    \"&:hover\": {\r\n                      backgroundColor: alpha(\"#0066FF\", 0.05),\r\n                    },\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: { xs: \"column\", sm: \"row\" },\r\n                    gap: { xs: 1, sm: 0 },\r\n                  }}\r\n                >\r\n                  {/* Checkbox for pair selection and favorite toggle */}\r\n                  <Checkbox\r\n                    checked={isFavorite(crypto.symbol)}\r\n                    disabled={isOperationPending(crypto.symbol)}\r\n                    onChange={() => {\r\n                      const isCurrentlyFavorite = isFavorite(crypto.symbol);\r\n\r\n                      if (isCurrentlyFavorite) {\r\n                        // Unchecking: remove from favorites (this will automatically delete alerts)\r\n                        toggleFavorite(crypto.symbol);\r\n                        togglePairSelection(crypto.symbol);\r\n\r\n                        // Update checked pairs\r\n                        setCheckedPairs((prev) => {\r\n                          const newSet = new Set(prev);\r\n                          newSet.delete(crypto.symbol);\r\n                          return newSet;\r\n                        });\r\n                      } else {\r\n                        // Checking: add to favorites (no automatic alert creation)\r\n                        toggleFavorite(crypto.symbol);\r\n                        togglePairSelection(crypto.symbol);\r\n\r\n                        // Update checked pairs\r\n                        setCheckedPairs((prev) => {\r\n                          const newSet = new Set(prev);\r\n                          newSet.add(crypto.symbol);\r\n                          return newSet;\r\n                        });\r\n\r\n                        // Automatically switch to favorites view when a pair is checked\r\n                        if (view !== \"favorites\") {\r\n                          setView(\"favorites\");\r\n                        }\r\n                      }\r\n                    }}\r\n                    sx={{\r\n                      color: view === \"favorites\" ? \"#FFD700\" : \"#60A5FA\",\r\n                      mr: 1,\r\n                      \"& .MuiSvgIcon-root\": { fontSize: 18 },\r\n                    }}\r\n                  />\r\n\r\n                  {/* Clickable area for coin selection */}\r\n                  <Box\r\n                    onClick={() => onSelectCoin && onSelectCoin(crypto)}\r\n                    sx={{\r\n                      flex: 1,\r\n                      cursor: \"pointer\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  >\r\n                    <ListItemText\r\n                      primary={\r\n                        <Box\r\n                          sx={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            alignItems: \"center\",\r\n                            flexDirection: { xs: \"column\", sm: \"row\" },\r\n                            gap: { xs: 1, sm: 0 },\r\n                          }}\r\n                        >\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              gap: 1,\r\n                            }}\r\n                          >\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              sx={{ fontWeight: 600 }}\r\n                            >\r\n                              {crypto.symbol}\r\n                            </Typography>\r\n                            {meetingConditions[crypto.symbol] && (\r\n                              <Chip\r\n                                icon={<NotificationsActiveIcon />}\r\n                                label=\"Alert\"\r\n                                size=\"small\"\r\n                                color=\"warning\"\r\n                                variant=\"outlined\"\r\n                              />\r\n                            )}\r\n                          </Box>\r\n                          <Box\r\n                            sx={{\r\n                              textAlign: { xs: \"center\", sm: \"right\" },\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              gap: 1,\r\n                              flexDirection: { xs: \"column\", sm: \"row\" },\r\n                            }}\r\n                          >\r\n                            <Box>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                sx={{ fontWeight: 600 }}\r\n                              >\r\n                                ${parseFloat(crypto.price || 0).toFixed(4)}\r\n                              </Typography>\r\n                              <Box\r\n                                sx={{\r\n                                  display: \"flex\",\r\n                                  alignItems: \"center\",\r\n                                  gap: 0.5,\r\n                                }}\r\n                              >\r\n                                {crypto.priceChangePercent24h >= 0 ? (\r\n                                  <TrendingUpIcon\r\n                                    sx={{ fontSize: 14, color: \"success.main\" }}\r\n                                  />\r\n                                ) : (\r\n                                  <TrendingDownIcon\r\n                                    sx={{ fontSize: 14, color: \"error.main\" }}\r\n                                  />\r\n                                )}\r\n                                <Typography\r\n                                  variant=\"caption\"\r\n                                  sx={{\r\n                                    color:\r\n                                      crypto.priceChangePercent24h >= 0\r\n                                        ? \"success.main\"\r\n                                        : \"error.main\",\r\n                                    fontWeight: 500,\r\n                                  }}\r\n                                >\r\n                                  {crypto.priceChangePercent24h >= 0 ? \"+\" : \"\"}\r\n                                  {parseFloat(\r\n                                    crypto.priceChangePercent24h || 0\r\n                                  ).toFixed(2)}\r\n                                  %\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                          </Box>\r\n                        </Box>\r\n                      }\r\n                      secondary={\r\n                        crypto.rsi && (\r\n                          <Box sx={{ mt: 0.5 }}>\r\n                            <Typography\r\n                              variant=\"caption\"\r\n                              color=\"text.secondary\"\r\n                            >\r\n                              {getRSILabel(crypto.rsi)}\r\n                            </Typography>\r\n                          </Box>\r\n                        )\r\n                      }\r\n                    />\r\n                  </Box>\r\n                </ListItem>\r\n                {index < filteredCryptos.length - 1 && (\r\n                  <Divider component=\"li\" />\r\n                )}\r\n              </React.Fragment>\r\n            ))\r\n          )}\r\n        </List>\r\n        {/* Removed Load More Button - All USDT pairs loaded at once */}\r\n      </SmoothTransition>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// Helper function to get RSI label\r\nconst getRSILabel = (rsi) => {\r\n  if (!rsi) return \"RSI: N/A\";\r\n  if (rsi >= 70) return `RSI: ${rsi.toFixed(0)} (Overbought)`;\r\n  if (rsi <= 30) return `RSI: ${rsi.toFixed(0)} (Oversold)`;\r\n  return `RSI: ${rsi.toFixed(0)}`;\r\n};\r\n\r\n// Memoize MarketPanel to prevent unnecessary re-renders\r\nexport default memo(MarketPanel);\r\n","import React from 'react';\r\nimport { Button, CircularProgress, Box } from '@mui/material';\r\n\r\nconst LoadingButton = ({ \r\n  loading, \r\n  children, \r\n  disabled, \r\n  loadingText = 'Loading...', \r\n  size = 'small',\r\n  ...props \r\n}) => {\r\n  return (\r\n    <Button\r\n      disabled={disabled || loading}\r\n      {...props}\r\n    >\r\n      {loading ? (\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <CircularProgress size={16} color=\"inherit\" />\r\n          {loadingText}\r\n        </Box>\r\n      ) : (\r\n        children\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  memo,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useCallback,\r\n  useMemo,\r\n  useRef,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n  Alert,\r\n  InputAdornment,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  useTheme,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport {\r\n  Check as CheckIcon,\r\n  Close as CloseIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@mui/icons-material\";\r\nimport { useCrypto } from \"../context/CryptoContext\";\r\nimport { useFilters } from \"../context/FilterContext\";\r\nimport { useAlert } from \"../context/AlertContext\";\r\nimport { useSelectedPairs } from \"../context/SelectedPairsContext\";\r\nimport { useSelectedPair } from \"../context/SelectedPairContext\";\r\nimport { useSocket } from \"../context/SocketContext\";\r\nimport LoadingButton from \"./LoadingButton\";\r\n\r\n// Custom styled components to match screenshot\r\nconst CustomCheckbox = styled((props) => (\r\n  <Checkbox\r\n    {...props}\r\n    disableRipple\r\n    icon={\r\n      <span\r\n        style={{\r\n          width: 18,\r\n          height: 18,\r\n          borderRadius: 3,\r\n          backgroundColor: \"white\", // default box white\r\n          border: \"1px solid rgba(255,255,255,0.3)\",\r\n          display: \"inline-block\",\r\n        }}\r\n      />\r\n    }\r\n    checkedIcon={\r\n      <span\r\n        style={{\r\n          width: 21,\r\n          height: 21,\r\n          borderRadius: 3,\r\n          backgroundColor: \"#1890ff\", // full blue fill\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <CheckIcon style={{ fontSize: 16, color: \"white\" }} />\r\n      </span>\r\n    }\r\n  />\r\n))({});\r\n\r\nconst DarkAccordion = styled(Accordion)({\r\n  backgroundColor: \"transparent\",\r\n  color: \"white\",\r\n  boxShadow: \"none\",\r\n  marginBottom: \"8px\",\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n  \"& .MuiAccordionSummary-root\": {\r\n    minHeight: \"48px\",\r\n    padding: \"0 16px\",\r\n    borderRadius: \"6px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.04)\",\r\n    },\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    margin: \"12px 0\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"500\",\r\n    letterSpacing: \"0.5px\",\r\n  },\r\n  \"& .MuiAccordionDetails-root\": {\r\n    padding: \"8px 16px 16px 16px\",\r\n  },\r\n});\r\n\r\nconst CustomAccordionSummary = styled(AccordionSummary)({\r\n  \"& .MuiAccordionSummary-expandIconWrapper\": {\r\n    color: \"rgba(255, 255, 255, 0.7)\",\r\n    transition: \"transform 0.2s ease\",\r\n  },\r\n  \"&:hover .MuiAccordionSummary-expandIconWrapper\": {\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nconst DarkTextField = styled(TextField)({\r\n  \"& .MuiOutlinedInput-root\": {\r\n    backgroundColor: \"#151b26\",\r\n    color: \"white\",\r\n    borderRadius: \"6px\",\r\n    fontSize: \"13px\",\r\n    \"& fieldset\": {\r\n      borderColor: \"#30363d\",\r\n      borderWidth: \"1px\",\r\n    },\r\n    \"&:hover fieldset\": {\r\n      borderColor: \"#4f80ff\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      borderColor: \"#4f80ff\",\r\n      borderWidth: \"2px\",\r\n    },\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    color: \"#8b949e\",\r\n    fontSize: \"13px\",\r\n    fontWeight: \"400\",\r\n  },\r\n  \"& .MuiInputAdornment-root\": {\r\n    color: \"#8b949e\",\r\n  },\r\n  \"& .MuiInputBase-input\": {\r\n    padding: \"12px 14px\",\r\n  },\r\n});\r\n\r\nconst DarkButton = styled(Button)({\r\n  borderColor: \"#30363d\",\r\n  color: \"white\",\r\n  borderRadius: \"8px\",\r\n  fontSize: \"14px\",\r\n  fontWeight: \"500\",\r\n  textTransform: \"none\",\r\n  letterSpacing: \"0.5px\",\r\n  padding: \"12px 24px\",\r\n  transition: \"all 0.2s ease\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#1c2637\",\r\n    borderColor: \"#4f80ff\",\r\n    transform: \"translateY(-1px)\",\r\n    boxShadow: \"0 4px 12px rgba(72, 128, 255, 0.3)\",\r\n  },\r\n  \"&.MuiButton-contained\": {\r\n    backgroundColor: \"#4f80ff\",\r\n    color: \"white\",\r\n    boxShadow: \"0 2px 8px rgba(72, 128, 255, 0.3)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3b6ae8\",\r\n      transform: \"translateY(-1px)\",\r\n      boxShadow: \"0 6px 16px rgba(72, 128, 255, 0.4)\",\r\n    },\r\n  },\r\n});\r\n\r\nconst StyledFormControlLabel = styled(FormControlLabel)({\r\n  \"& .MuiFormControlLabel-label\": {\r\n    color: \"rgba(255, 255, 255, 0.9)\",\r\n    fontSize: \"13px\",\r\n    fontWeight: \"400\",\r\n    letterSpacing: \"0.3px\",\r\n    marginLeft: \"8px\",\r\n  },\r\n  margin: \"1px 0\",\r\n  padding: \"1px 2px\",\r\n  borderRadius: \"4px\",\r\n  transition: \"background-color 0.2s ease\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"rgba(255, 255, 255, 0.04)\",\r\n  },\r\n  \"& .MuiCheckbox-root\": {\r\n    padding: \"1px\",\r\n  },\r\n});\r\n\r\nconst DarkTypography = styled(Typography)({\r\n  color: \"rgba(255, 255, 255, 0.95)\",\r\n  fontSize: \"14px\",\r\n  fontWeight: \"500\",\r\n  letterSpacing: \"0.5px\",\r\n});\r\n\r\nconst FilterSidebar = memo(\r\n  forwardRef((props, ref) => {\r\n    const { marketPanelRef } = props;\r\n    const {\r\n      filters: ctxFilters,\r\n      setFilters: setCtxFilters,\r\n      getFilterValues,\r\n    } = useFilters();\r\n    const { createAlert, deleteAlertsBySymbol } = useAlert();\r\n    const { selectedSymbol } = useSelectedPair();\r\n    const { cryptos, updateFilter: updateCryptoFilter } = useCrypto();\r\n    const {\r\n      getSelectedPairsArray,\r\n      getSelectedCount,\r\n      getFavoritePairsForAlerts,\r\n    } = useSelectedPairs();\r\n    const { showNotification } = useSocket();\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n    const [percentageValue, setPercentageValue] = useState(\"\");\r\n    const [isCreatingAlert, setIsCreatingAlert] = useState(false);\r\n\r\n    // Simple event bus for notifications - memoized to prevent re-renders\r\n    const eventBus = useMemo(\r\n      () => ({\r\n        emit: (event, data) => {\r\n          console.log(`Event: ${event}`, data);\r\n        },\r\n      }),\r\n      []\r\n    );\r\n\r\n    const theme = useTheme();\r\n    const isSmall = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"lg\"));\r\n\r\n    // Fallback to context if props not supplied\r\n    const filters = ctxFilters;\r\n\r\n    // Memoized event handlers to prevent re-renders\r\n    const handleCheckboxChange = useCallback(\r\n      (category, value) => {\r\n        // Define single selection categories\r\n        const singleSelectionCategories = [\r\n          \"market\",\r\n          \"exchange\",\r\n          \"pair\",\r\n          \"minDaily\",\r\n          \"changePercent\",\r\n          \"alertCount\",\r\n          \"candle\",\r\n        ];\r\n\r\n        let newFilters = { ...ctxFilters };\r\n\r\n        if (singleSelectionCategories.includes(category)) {\r\n          // Single selection: if clicking the same option, uncheck it; otherwise clear all others and select only this one\r\n          const isCurrentlyChecked = ctxFilters[category]?.[value] || false;\r\n\r\n          if (isCurrentlyChecked) {\r\n            // If currently checked, uncheck it (clear the entire category)\r\n            newFilters[category] = {};\r\n            console.log(\r\n              `🔧 Single selection checkbox unchecked: ${category}.${value} (cleared entire category)`\r\n            );\r\n          } else {\r\n            // If not checked, clear all others and select only this one\r\n            newFilters[category] = {};\r\n            newFilters[category][value] = true;\r\n            console.log(\r\n              `🔧 Single selection checkbox checked: ${category}.${value} (cleared others, selected this)`\r\n            );\r\n          }\r\n        } else {\r\n          // Multiple selection: toggle the current value\r\n          newFilters[category] = {\r\n            ...ctxFilters[category],\r\n            [value]: !ctxFilters[category]?.[value],\r\n          };\r\n          console.log(\r\n            `🔧 Multiple selection checkbox toggled: ${category}.${value} = ${newFilters[category][value]}`\r\n          );\r\n        }\r\n\r\n        setCtxFilters(newFilters);\r\n\r\n        // Update CryptoContext filter for market panel filtering\r\n        if (category === \"pair\" || category === \"market\") {\r\n          console.log(\r\n            `Updating crypto filter for ${category}:`,\r\n            newFilters[category]\r\n          );\r\n          if (updateCryptoFilter) {\r\n            updateCryptoFilter({\r\n              [category]: newFilters[category],\r\n            });\r\n          }\r\n        }\r\n\r\n        // Special handling for USDT filter - trigger immediate reload of crypto data\r\n        if (category === \"pair\" && value === \"USDT\") {\r\n          console.log(\"USDT filter changed, reloading crypto data...\");\r\n          // The MarketPanel will automatically reload when filters change\r\n        }\r\n      },\r\n      [setCtxFilters, ctxFilters, updateCryptoFilter]\r\n    );\r\n\r\n    const handleTextChange = useCallback(\r\n      (category, value) => {\r\n        setCtxFilters((prev) => ({\r\n          ...prev,\r\n          [category]: value,\r\n        }));\r\n      },\r\n      [setCtxFilters]\r\n    );\r\n\r\n    const handleToggleChange = useCallback(\r\n      (category, event, newValue) => {\r\n        if (newValue !== null) {\r\n          setCtxFilters((prev) => ({\r\n            ...prev,\r\n            [category]: newValue,\r\n          }));\r\n        }\r\n      },\r\n      [setCtxFilters]\r\n    );\r\n\r\n    // Effect to adjust accordion state based on screen size\r\n    useEffect(() => {\r\n      // You can add logic here to collapse accordions on small screens if needed\r\n    }, [isSmall]);\r\n\r\n    // Validation function to check if minimum required fields are filled\r\n    const validateAlertForm = useCallback(() => {\r\n      const errors = [];\r\n\r\n      // Check if at least one condition is selected\r\n      const hasChangePercent =\r\n        Object.keys(filters.changePercent || {}).some(\r\n          (key) => filters.changePercent[key]\r\n        ) &&\r\n        (percentageValue || filters.percentageValue);\r\n      const hasRSI =\r\n        Object.keys(filters.rsiRange || {}).some(\r\n          (key) => filters.rsiRange[key]\r\n        ) &&\r\n        filters.rsiPeriod &&\r\n        filters.rsiLevel;\r\n      const hasEMA =\r\n        Object.keys(filters.ema || {}).some((key) => filters.ema[key]) &&\r\n        filters.emaFast &&\r\n        filters.emaSlow;\r\n      const hasCandle = Object.keys(filters.candle || {}).some(\r\n        (key) => filters.candle[key]\r\n      );\r\n      const hasVolume = Object.keys(filters.volume || {}).some(\r\n        (key) => filters.volume[key]\r\n      );\r\n\r\n      if (!hasChangePercent && !hasRSI && !hasEMA && !hasCandle && !hasVolume) {\r\n        errors.push(\r\n          \"At least one condition must be selected (Change %, RSI, EMA, Candle, or Volume)\"\r\n        );\r\n      }\r\n\r\n      // Validate Change % specific requirements\r\n      if (hasChangePercent) {\r\n        if (!percentageValue && !filters.percentageValue) {\r\n          errors.push(\r\n            \"Percentage value is required when Change % timeframe is selected\"\r\n          );\r\n        } else {\r\n          const percentValue = Number(\r\n            percentageValue || filters.percentageValue\r\n          );\r\n          if (isNaN(percentValue) || percentValue <= 0) {\r\n            errors.push(\"Percentage value must be a positive number\");\r\n          }\r\n        }\r\n      }\r\n\r\n      // Validate RSI specific requirements\r\n      if (hasRSI) {\r\n        if (!filters.rsiPeriod || !filters.rsiLevel) {\r\n          errors.push(\r\n            \"RSI Period and Level are required when RSI timeframe is selected\"\r\n          );\r\n        } else {\r\n          const period = Number(filters.rsiPeriod);\r\n          const level = Number(filters.rsiLevel);\r\n          if (isNaN(period) || period <= 0) {\r\n            errors.push(\"RSI Period must be a positive number\");\r\n          }\r\n          if (isNaN(level) || level < 1 || level > 100) {\r\n            errors.push(\"RSI Level must be between 1 and 100\");\r\n          }\r\n        }\r\n      }\r\n\r\n      // Validate EMA specific requirements\r\n      if (hasEMA) {\r\n        if (!filters.emaFast || !filters.emaSlow) {\r\n          errors.push(\r\n            \"EMA Fast and Slow periods are required when EMA timeframe is selected\"\r\n          );\r\n        } else {\r\n          const fast = Number(filters.emaFast);\r\n          const slow = Number(filters.emaSlow);\r\n          if (isNaN(fast) || fast <= 0) {\r\n            errors.push(\"EMA Fast period must be a positive number\");\r\n          }\r\n          if (isNaN(slow) || slow <= 0) {\r\n            errors.push(\"EMA Slow period must be a positive number\");\r\n          }\r\n          if (fast >= slow) {\r\n            errors.push(\"EMA Fast period must be less than Slow period\");\r\n          }\r\n        }\r\n      }\r\n\r\n      // Validate Candle specific requirements\r\n      if (hasCandle) {\r\n        const condition = filters.candleCondition || \"NONE\";\r\n        const conditionMap = {\r\n          \"Candle Above Open\": \"ABOVE_OPEN\",\r\n          \"Candle Below Open\": \"BELOW_OPEN\",\r\n          \"Green Candle\": \"GREEN_CANDLE\",\r\n          \"Red Candle\": \"RED_CANDLE\",\r\n          \"Bullish Hammer\": \"BULLISH_HAMMER\",\r\n          \"Bearish Hammer\": \"BEARISH_HAMMER\",\r\n          Doji: \"DOJI\",\r\n          \"Long Upper Wick\": \"LONG_UPPER_WICK\",\r\n          \"Long Lower Wick\": \"LONG_LOWER_WICK\",\r\n          None: \"NONE\",\r\n        };\r\n        const mappedCondition = conditionMap[condition] || \"NONE\";\r\n\r\n        if (!condition || condition === \"None\" || mappedCondition === \"NONE\") {\r\n          errors.push(\r\n            \"Candle condition is required when Candle timeframe is selected\"\r\n          );\r\n        }\r\n      }\r\n\r\n      // Validate Volume specific requirements\r\n      if (hasVolume) {\r\n        if (!filters.volumeCondition) {\r\n          errors.push(\r\n            \"Volume condition is required when Volume timeframe is selected\"\r\n          );\r\n        }\r\n        if (!filters.volumePercentage) {\r\n          errors.push(\r\n            \"Volume percentage is required when Volume timeframe is selected\"\r\n          );\r\n        } else {\r\n          const volumePercent = Number(filters.volumePercentage);\r\n          if (isNaN(volumePercent) || volumePercent <= 0) {\r\n            errors.push(\"Volume percentage must be a positive number\");\r\n          }\r\n        }\r\n      }\r\n\r\n      return errors;\r\n    }, [filters, percentageValue]);\r\n\r\n    // Memoized create alert function - now supports multiple pairs and favorites\r\n    const handleCreateAlert = useCallback(\r\n      async (symbolOverride = null) => {\r\n        // ==========================================\r\n        // CRITICAL DEBUG LOGGING FOR ALERT CREATION\r\n        // ==========================================\r\n        console.log(\"🚨 === CREATE ALERT CLICKED - DEBUG LOGGING ===\");\r\n        console.log(\"🚨 Timestamp:\", new Date().toISOString());\r\n        console.log(\"🚨 selectedSymbol type:\", typeof selectedSymbol);\r\n        console.log(\"🚨 selectedSymbol value:\", selectedSymbol);\r\n        console.log(\"🚨 symbolOverride:\", symbolOverride);\r\n        console.log(\r\n          \"🚨 selectedSymbol JSON:\",\r\n          JSON.stringify(selectedSymbol, null, 2)\r\n        );\r\n\r\n        // Log current filter conditions\r\n        console.log(\"🚨 === CURRENT FILTER CONDITIONS ===\");\r\n        console.log(\"🚨 Filters object:\", JSON.stringify(filters, null, 2));\r\n        console.log(\"🚨 Percentage value:\", percentageValue);\r\n\r\n        // Get favorite pairs for validation\r\n        const favoritePairs = getFavoritePairsForAlerts(cryptos);\r\n        console.log(\"🚨 === FAVORITE PAIRS VALIDATION ===\");\r\n        console.log(\"🚨 Favorite pairs count:\", favoritePairs.length);\r\n        console.log(\"🚨 Favorite pairs list:\", favoritePairs);\r\n        console.log(\"🚨 All cryptos count:\", cryptos.length);\r\n        console.log(\r\n          \"🚨 Cryptos with isFavorite=true:\",\r\n          cryptos.filter((c) => c.isFavorite).map((c) => c.symbol)\r\n        );\r\n\r\n        // Deep debugging of selectedSymbol object structure\r\n        if (selectedSymbol && typeof selectedSymbol === \"object\") {\r\n          console.log(\"=== OBJECT STRUCTURE ANALYSIS ===\");\r\n          console.log(\"Object keys:\", Object.keys(selectedSymbol));\r\n          console.log(\"Object values:\", Object.values(selectedSymbol));\r\n          console.log(\"Object entries:\", Object.entries(selectedSymbol));\r\n\r\n          // Check each property\r\n          Object.keys(selectedSymbol).forEach((key) => {\r\n            console.log(\r\n              `Property '${key}':`,\r\n              selectedSymbol[key],\r\n              \"Type:\",\r\n              typeof selectedSymbol[key]\r\n            );\r\n          });\r\n\r\n          // Check common symbol property names\r\n          const possibleSymbolProps = [\r\n            \"symbol\",\r\n            \"Symbol\",\r\n            \"SYMBOL\",\r\n            \"ticker\",\r\n            \"pair\",\r\n            \"name\",\r\n            \"code\",\r\n          ];\r\n          possibleSymbolProps.forEach((prop) => {\r\n            if (selectedSymbol[prop]) {\r\n              console.log(\r\n                `Found potential symbol in '${prop}':`,\r\n                selectedSymbol[prop]\r\n              );\r\n            }\r\n          });\r\n        }\r\n\r\n        // Extract symbol string properly - selectedSymbol should be a string from SelectedPairContext\r\n        let symbol;\r\n        if (symbolOverride) {\r\n          // Check if symbolOverride is an event object (common mistake)\r\n          if (\r\n            symbolOverride &&\r\n            typeof symbolOverride === \"object\" &&\r\n            symbolOverride.type\r\n          ) {\r\n            console.log(\"symbolOverride is an event object, ignoring it\");\r\n            // Ignore the event and use selectedSymbol instead\r\n            symbol = null;\r\n          } else {\r\n            symbol = String(symbolOverride);\r\n            console.log(\"Using symbolOverride:\", symbol);\r\n          }\r\n        }\r\n\r\n        if (!symbol && selectedSymbol) {\r\n          // selectedSymbol from SelectedPairContext is a string, but handle edge cases\r\n          if (\r\n            typeof selectedSymbol === \"string\" &&\r\n            selectedSymbol.trim() !== \"\"\r\n          ) {\r\n            symbol = selectedSymbol.trim();\r\n            console.log(\"Using selectedSymbol from context:\", symbol);\r\n          } else if (\r\n            typeof selectedSymbol === \"object\" &&\r\n            selectedSymbol !== null\r\n          ) {\r\n            console.log(\"=== ATTEMPTING SYMBOL EXTRACTION FROM OBJECT ===\");\r\n\r\n            // Try multiple possible property names\r\n            const extractionAttempts = [\r\n              selectedSymbol.symbol,\r\n              selectedSymbol.Symbol,\r\n              selectedSymbol.SYMBOL,\r\n              selectedSymbol.selectedSymbol,\r\n              selectedSymbol.ticker,\r\n              selectedSymbol.pair,\r\n              selectedSymbol.name,\r\n              selectedSymbol.code,\r\n            ];\r\n\r\n            console.log(\"Extraction attempts:\", extractionAttempts);\r\n\r\n            // Find first valid string\r\n            symbol = extractionAttempts.find(\r\n              (attempt) =>\r\n                attempt && typeof attempt === \"string\" && attempt.trim() !== \"\"\r\n            );\r\n\r\n            if (symbol) {\r\n              console.log(\"Successfully extracted symbol:\", symbol);\r\n            } else {\r\n              console.log(\"No valid symbol found in object, using fallback\");\r\n              symbol = \"BTCUSDT\";\r\n            }\r\n          } else {\r\n            symbol = \"BTCUSDT\"; // fallback\r\n            console.log(\r\n              \"selectedSymbol invalid, using fallback:\",\r\n              selectedSymbol\r\n            );\r\n          }\r\n        } else if (!symbol) {\r\n          symbol = \"BTCUSDT\"; // fallback\r\n          console.log(\"No valid symbol found, using fallback\");\r\n        }\r\n\r\n        // Ensure symbol is valid\r\n        if (!symbol || typeof symbol !== \"string\" || symbol.trim() === \"\") {\r\n          console.warn(\r\n            \"Symbol is invalid, forcing BTCUSDT. Original value:\",\r\n            symbol\r\n          );\r\n          symbol = \"BTCUSDT\";\r\n        }\r\n\r\n        // Get selected pairs from context\r\n        const selectedPairs = getSelectedPairsArray();\r\n        const selectedCount = getSelectedCount();\r\n\r\n        console.log(\"Selected pairs:\", selectedPairs);\r\n        console.log(\"Selected count:\", selectedCount);\r\n\r\n        // Determine which symbols to create alerts for\r\n        let symbolsToProcess = [];\r\n\r\n        // Check if we're in favorites context and should use favorite pairs\r\n        console.log(\r\n          \"🔍 FAVORITES DEBUG - favoritePairs from getFavoritePairsForAlerts:\",\r\n          favoritePairs\r\n        );\r\n        console.log(\r\n          \"🔍 FAVORITES DEBUG - favoritePairs.length:\",\r\n          favoritePairs.length\r\n        );\r\n        console.log(\"🔍 FAVORITES DEBUG - All cryptos count:\", cryptos.length);\r\n        console.log(\r\n          \"🔍 FAVORITES DEBUG - Cryptos with isFavorite=true:\",\r\n          cryptos.filter((c) => c.isFavorite).map((c) => c.symbol)\r\n        );\r\n\r\n        // Priority order: Intersection of Selected pairs and Favorites > All Favorite pairs > Single symbol > Fallback\r\n        if (selectedCount > 0) {\r\n          // Use selected pairs from MarketPanel checkboxes, but only if they are also in favorites\r\n          const validSelectedPairs = selectedPairs.filter((pair) =>\r\n            favoritePairs.includes(pair)\r\n          );\r\n          if (validSelectedPairs.length > 0) {\r\n            symbolsToProcess = validSelectedPairs;\r\n            console.log(\r\n              \"🎯 Creating alerts for SELECTED pairs that are in favorites:\",\r\n              symbolsToProcess\r\n            );\r\n          } else {\r\n            // If no selected pairs are in favorites, use all favorite pairs instead\r\n            symbolsToProcess = favoritePairs;\r\n            console.log(\r\n              \"⭐ No selected pairs in favorites, using all FAVORITE pairs:\",\r\n              symbolsToProcess\r\n            );\r\n          }\r\n        } else if (favoritePairs.length > 0) {\r\n          // Use favorite pairs if no specific selection\r\n          symbolsToProcess = favoritePairs;\r\n          console.log(\r\n            \"⭐ Creating alerts for FAVORITE pairs:\",\r\n            symbolsToProcess\r\n          );\r\n          console.log(\r\n            \"⭐ FAVORITES DEBUG - symbolsToProcess.length:\",\r\n            symbolsToProcess.length\r\n          );\r\n        } else if (symbolOverride) {\r\n          // Single symbol override (only if it's in favorites)\r\n          if (favoritePairs.includes(symbol)) {\r\n            symbolsToProcess = [symbol];\r\n            console.log(\r\n              \"🎯 Creating alert for single override symbol:\",\r\n              symbol\r\n            );\r\n          } else {\r\n            console.log(\r\n              \"⚠️ Override symbol not in favorites, skipping:\",\r\n              symbol\r\n            );\r\n            setErrorMessage(\r\n              `❌ Symbol ${symbol} is not in your favorites. Please add it to favorites first.`\r\n            );\r\n            return;\r\n          }\r\n        } else if (selectedSymbol && favoritePairs.includes(symbol)) {\r\n          // Use current selected symbol (only if it's in favorites)\r\n          symbolsToProcess = [symbol];\r\n          console.log(\"🎯 Creating alert for current selected symbol:\", symbol);\r\n        } else {\r\n          // No valid symbols found\r\n          console.log(\"⚠️ No valid symbols found for alert creation\");\r\n          setErrorMessage(\r\n            \"❌ No favorite pairs available for alert creation. Please add some pairs to favorites first.\"\r\n          );\r\n          return;\r\n        }\r\n\r\n        console.log(\"Final symbols for alert creation:\", symbolsToProcess);\r\n\r\n        // ==========================================\r\n        // CRITICAL VALIDATION: CHECK FAVORITE PAIRS AND CONDITIONS\r\n        // ==========================================\r\n        console.log(\"🚨 === VALIDATION CHECKS ===\");\r\n\r\n        // Check if we have favorite pairs\r\n        if (favoritePairs.length === 0) {\r\n          console.log(\"🚫 VALIDATION FAILED: No favorite pairs found\");\r\n          setErrorMessage(\r\n            \"❌ No favorite pairs found. Please add some pairs to favorites before creating alerts.\"\r\n          );\r\n          return;\r\n        }\r\n\r\n        // Check if we have active conditions\r\n        const hasActiveConditions = validateAlertForm().length === 0;\r\n        if (!hasActiveConditions) {\r\n          console.log(\"🚫 VALIDATION FAILED: No active conditions found\");\r\n          setErrorMessage(\r\n            \"❌ Please select at least one condition (Change %, RSI, EMA, Candle, or Volume) before creating alerts.\"\r\n          );\r\n          return;\r\n        }\r\n\r\n        // Validation: All symbols should now be in favorites due to our filtering above\r\n        console.log(\r\n          \"✅ All symbols are guaranteed to be in favorites due to filtering logic\"\r\n        );\r\n\r\n        console.log(\"✅ VALIDATION PASSED: All checks successful\");\r\n        console.log(\"✅ Favorite pairs available:\", favoritePairs.length);\r\n        console.log(\"✅ Active conditions found:\", hasActiveConditions);\r\n        console.log(\"✅ All symbols are in favorites\");\r\n\r\n        // Validate form before proceeding\r\n        const validationErrors = validateAlertForm();\r\n        if (validationErrors.length > 0) {\r\n          setErrorMessage(validationErrors.join(\". \"));\r\n          return;\r\n        }\r\n\r\n        setIsCreatingAlert(true);\r\n        setErrorMessage(\"\");\r\n        setSuccessMessage(\"\");\r\n\r\n        // Show progress message\r\n        setSuccessMessage(\r\n          `Creating alerts for ${symbolsToProcess.length} pairs...`\r\n        );\r\n\r\n        try {\r\n          const now = new Date();\r\n          const pad = (n) => n.toString().padStart(2, \"0\");\r\n          const alertTime = `${pad(now.getHours())}:${pad(now.getMinutes())}`;\r\n\r\n          // Get filter values with proper null/0 handling\r\n          const filterValues = getFilterValues();\r\n          console.log(`🔍 Filter values retrieved:`, filterValues);\r\n          console.log(`🔍 Current filters state:`, filters);\r\n\r\n          // Helpers to read first selected key from a section with null fallback\r\n          const firstSelected = (sectionObj) => {\r\n            if (!sectionObj || typeof sectionObj !== \"object\") return null;\r\n            const keys = Object.keys(sectionObj).filter((k) => sectionObj[k]);\r\n            return keys.length > 0 ? keys[0] : null;\r\n          };\r\n\r\n          const market = firstSelected(filters.market) || \"SPOT\";\r\n          const exchange = firstSelected(filters.exchange) || \"BINANCE\";\r\n          const tradingPair = firstSelected(filters.pair) || \"USDT\";\r\n\r\n          // Use filterValues for OHLCV-integrated data\r\n          const minDailyVolume = filterValues.minDailyVolume || 0;\r\n          console.log(`🔍 Min Daily Volume selected: ${minDailyVolume}`);\r\n          const changePercentTimeframe = filterValues.changePercent.timeframe;\r\n          const alertCountTimeframe = filterValues.alertCount.timeframe;\r\n          const alertCountEnabled = filterValues.alertCount.enabled;\r\n\r\n          // Technical indicators with null handling\r\n          const rsiConfig = filterValues.rsi;\r\n          const emaConfig = filterValues.ema;\r\n          const candleTimeframe = firstSelected(filters.candle) || null;\r\n\r\n          // Get percentage value with multiple fallbacks\r\n          let finalPercentageValue;\r\n\r\n          // Priority 1: Direct input field value\r\n          if (\r\n            percentageInputRef.current &&\r\n            percentageInputRef.current.value &&\r\n            percentageInputRef.current.value.trim() !== \"\"\r\n          ) {\r\n            finalPercentageValue = Number(percentageInputRef.current.value);\r\n            console.log(\"Got percentage from input ref:\", finalPercentageValue);\r\n          }\r\n          // Priority 2: Local state value\r\n          else if (\r\n            percentageValue &&\r\n            percentageValue.toString().trim() !== \"\"\r\n          ) {\r\n            finalPercentageValue = Number(percentageValue);\r\n            console.log(\r\n              \"Got percentage from local state:\",\r\n              finalPercentageValue\r\n            );\r\n          }\r\n          // Priority 3: Context filters value\r\n          else if (\r\n            filters.percentageValue &&\r\n            filters.percentageValue.toString().trim() !== \"\"\r\n          ) {\r\n            finalPercentageValue = Number(filters.percentageValue);\r\n            console.log(\r\n              \"Got percentage from context filters:\",\r\n              finalPercentageValue\r\n            );\r\n          }\r\n          // Default fallback\r\n          else {\r\n            finalPercentageValue = 1;\r\n            console.log(\r\n              \"Using default percentage value:\",\r\n              finalPercentageValue\r\n            );\r\n          }\r\n\r\n          // Ensure we have a valid non-zero number\r\n          if (isNaN(finalPercentageValue) || finalPercentageValue <= 0) {\r\n            finalPercentageValue = 1;\r\n            console.log(\r\n              \"Invalid percentage, using default:\",\r\n              finalPercentageValue\r\n            );\r\n          }\r\n\r\n          console.log(\r\n            \"Final percentage value being sent to backend:\",\r\n            finalPercentageValue\r\n          );\r\n\r\n          // First, delete existing alerts for all symbols using bulk delete for better performance\r\n          console.log(\r\n            \"Bulk deleting existing alerts for symbols:\",\r\n            symbolsToProcess\r\n          );\r\n\r\n          // Update progress message\r\n          setSuccessMessage(\r\n            `Deleting existing alerts for ${symbolsToProcess.length} pairs...`\r\n          );\r\n\r\n          let deletionResults = [];\r\n          try {\r\n            // Use bulk delete endpoint for better performance\r\n            const response = await axios.delete(\"/api/alerts/bulk-delete\", {\r\n              data: { symbols: symbolsToProcess.map((s) => s.trim()) },\r\n            });\r\n\r\n            console.log(\r\n              `Bulk deleted ${response.data.deletedCount} alerts for ${symbolsToProcess.length} symbols`\r\n            );\r\n\r\n            deletionResults = symbolsToProcess.map((symbol) => ({\r\n              symbol: symbol.trim(),\r\n              deletedCount:\r\n                response.data.deletedCount / symbolsToProcess.length, // Approximate\r\n              success: true,\r\n            }));\r\n          } catch (error) {\r\n            console.error(\r\n              \"Error in bulk delete, falling back to individual deletes:\",\r\n              error\r\n            );\r\n\r\n            // Fallback to individual deletes if bulk delete fails\r\n            const deletionPromises = symbolsToProcess.map(\r\n              async (currentSymbol) => {\r\n                try {\r\n                  const cleanSymbol = currentSymbol.trim();\r\n                  const deletionResult = await deleteAlertsBySymbol(\r\n                    cleanSymbol\r\n                  );\r\n                  return {\r\n                    symbol: cleanSymbol,\r\n                    deletedCount: deletionResult.deletedCount,\r\n                    success: true,\r\n                  };\r\n                } catch (error) {\r\n                  console.error(\r\n                    `Error deleting existing alerts for ${currentSymbol}:`,\r\n                    error\r\n                  );\r\n                  return {\r\n                    symbol: currentSymbol,\r\n                    deletedCount: 0,\r\n                    success: false,\r\n                    error: error.message,\r\n                  };\r\n                }\r\n              }\r\n            );\r\n\r\n            deletionResults = await Promise.all(deletionPromises);\r\n          }\r\n\r\n          console.log(\"Deletion results:\", deletionResults);\r\n\r\n          // Update progress message\r\n          setSuccessMessage(\r\n            `Creating new alerts for ${symbolsToProcess.length} pairs...`\r\n          );\r\n\r\n          // Now create new alerts for all selected symbols in parallel for better performance\r\n          const alertResults = [];\r\n          const failedAlerts = [];\r\n\r\n          const alertCreationPromises = symbolsToProcess.map(\r\n            async (currentSymbol) => {\r\n              try {\r\n                // Validate each symbol\r\n                if (\r\n                  !currentSymbol ||\r\n                  typeof currentSymbol !== \"string\" ||\r\n                  currentSymbol.trim() === \"\"\r\n                ) {\r\n                  console.error(\"Invalid symbol in batch:\", currentSymbol);\r\n                  return {\r\n                    symbol: currentSymbol,\r\n                    success: false,\r\n                    error: \"Invalid symbol format\",\r\n                  };\r\n                }\r\n\r\n                const cleanSymbol = currentSymbol.trim();\r\n                console.log(\"Creating alert for symbol:\", cleanSymbol);\r\n\r\n                // Define hasVolume for this scope\r\n                const hasVolume = Object.keys(filters.volume || {}).some(\r\n                  (key) => filters.volume[key]\r\n                );\r\n\r\n                // Create clean alertData object with only serializable values\r\n                const alertData = {\r\n                  symbol: cleanSymbol,\r\n                  direction: \">\",\r\n                  targetType: \"percentage\",\r\n                  targetValue: Number(finalPercentageValue),\r\n                  trackingMode: \"current\",\r\n                  intervalMinutes: 60,\r\n                  volumeChangeRequired: 0,\r\n                  alertTime: String(alertTime),\r\n                  comment: `Alert created from filter for ${cleanSymbol}`,\r\n                  email: \" kainat.tasadaq3@gmail.com\",\r\n\r\n                  // OHLCV-integrated Min Daily Volume\r\n                  minDailyVolume: Number(minDailyVolume) || 0,\r\n\r\n                  // OHLCV-integrated Change % with timeframe\r\n                  changePercentTimeframe: changePercentTimeframe\r\n                    ? String(changePercentTimeframe)\r\n                    : null,\r\n                  changePercentValue: Number(finalPercentageValue),\r\n                  // Alert Count configuration\r\n                  alertCountTimeframe: alertCountTimeframe\r\n                    ? String(alertCountTimeframe)\r\n                    : null,\r\n                  alertCountEnabled: Boolean(alertCountEnabled),\r\n                  maxAlertsPerTimeframe: 1, // Default to 1 alert per timeframe candle\r\n\r\n                  // Candle configuration - single timeframe like other conditions\r\n                  candleTimeframes: candleTimeframe\r\n                    ? [String(candleTimeframe)]\r\n                    : [],\r\n                  candleCondition: candleTimeframe\r\n                    ? (() => {\r\n                        const condition = filters.candleCondition || \"NONE\";\r\n                        const conditionMap = {\r\n                          \"Candle Above Open\": \"ABOVE_OPEN\",\r\n                          \"Candle Below Open\": \"BELOW_OPEN\",\r\n                          \"Green Candle\": \"GREEN_CANDLE\",\r\n                          \"Red Candle\": \"RED_CANDLE\",\r\n                          \"Bullish Hammer\": \"BULLISH_HAMMER\",\r\n                          \"Bearish Hammer\": \"BEARISH_HAMMER\",\r\n                          Doji: \"DOJI\",\r\n                          \"Long Upper Wick\": \"LONG_UPPER_WICK\",\r\n                          \"Long Lower Wick\": \"LONG_LOWER_WICK\",\r\n                          None: \"NONE\",\r\n                        };\r\n                        return String(conditionMap[condition] || \"NONE\");\r\n                      })()\r\n                    : \"NONE\",\r\n\r\n                  // RSI configuration - null if not selected\r\n                  rsiEnabled: Boolean(rsiConfig),\r\n                  rsiTimeframe: rsiConfig?.timeframe\r\n                    ? String(rsiConfig.timeframe)\r\n                    : null,\r\n                  rsiPeriod: rsiConfig?.period ? Number(rsiConfig.period) : 0,\r\n                  rsiCondition: rsiConfig?.condition\r\n                    ? String(rsiConfig.condition).replace(\" \", \"_\")\r\n                    : \"NONE\",\r\n                  rsiLevel: rsiConfig?.level ? Number(rsiConfig.level) : 0,\r\n\r\n                  // EMA configuration - null if not selected\r\n                  emaEnabled: Boolean(emaConfig),\r\n                  emaTimeframe: emaConfig?.timeframe\r\n                    ? String(emaConfig.timeframe)\r\n                    : null,\r\n                  emaFastPeriod: emaConfig?.fastPeriod\r\n                    ? Number(emaConfig.fastPeriod)\r\n                    : 0,\r\n                  emaSlowPeriod: emaConfig?.slowPeriod\r\n                    ? Number(emaConfig.slowPeriod)\r\n                    : 0,\r\n                  emaCondition: emaConfig?.condition\r\n                    ? String(emaConfig.condition).replace(\" \", \"_\")\r\n                    : \"NONE\",\r\n\r\n                  // Volume configuration - null if not selected\r\n                  volumeEnabled: Boolean(hasVolume),\r\n                  volumeTimeframes: hasVolume\r\n                    ? Object.keys(filters.volume || {}).filter(\r\n                        (key) => filters.volume[key]\r\n                      )\r\n                    : [],\r\n                  volumeCondition: hasVolume\r\n                    ? String(filters.volumeCondition || \"NONE\")\r\n                    : \"NONE\",\r\n                  volumePercentage: hasVolume\r\n                    ? Number(filters.volumePercentage || 0)\r\n                    : 0,\r\n\r\n                  // Market filters (always active)\r\n                  market: String(market),\r\n                  exchange: String(exchange),\r\n                  tradingPair: String(tradingPair),\r\n                };\r\n\r\n                // Allow creating alerts with null/0 values - no validation required\r\n\r\n                console.log(\"Creating alert with OHLCV data:\", {\r\n                  symbol: alertData.symbol,\r\n                  minDailyVolume: alertData.minDailyVolume,\r\n                  changePercent: {\r\n                    timeframe: alertData.changePercentTimeframe,\r\n                    value: alertData.changePercentValue,\r\n                  },\r\n                  alertCount: {\r\n                    timeframe: alertData.alertCountTimeframe,\r\n                    enabled: alertData.alertCountEnabled,\r\n                  },\r\n                  rsi: rsiConfig,\r\n                  ema: emaConfig,\r\n                });\r\n\r\n                const created = await createAlert(alertData);\r\n                console.log(\"✅ ALERT CREATED SUCCESSFULLY:\", cleanSymbol);\r\n                console.log(\r\n                  \"✅ Alert data:\",\r\n                  JSON.stringify(alertData, null, 2)\r\n                );\r\n                console.log(\"✅ Created alert:\", created);\r\n\r\n                eventBus.emit(\"ALERT_CREATED\", created);\r\n\r\n                return {\r\n                  symbol: cleanSymbol,\r\n                  success: true,\r\n                  alert: created,\r\n                };\r\n              } catch (error) {\r\n                console.error(\r\n                  \"Error creating alert for\",\r\n                  currentSymbol,\r\n                  \":\",\r\n                  error\r\n                );\r\n                const errorMsg =\r\n                  error.response?.data?.message ||\r\n                  error.response?.data ||\r\n                  error.message ||\r\n                  \"Unknown error\";\r\n\r\n                return {\r\n                  symbol: currentSymbol,\r\n                  success: false,\r\n                  error: errorMsg,\r\n                };\r\n              }\r\n            }\r\n          );\r\n\r\n          // Wait for all alert creation promises to complete\r\n          const alertCreationResults = await Promise.all(alertCreationPromises);\r\n\r\n          // Separate successful and failed results\r\n          alertCreationResults.forEach((result) => {\r\n            if (result.success) {\r\n              alertResults.push(result);\r\n            } else {\r\n              failedAlerts.push(result);\r\n            }\r\n          });\r\n\r\n          // Provide feedback based on results\r\n          const successCount = alertResults.length;\r\n          const failureCount = failedAlerts.length;\r\n          const totalCount = symbolsToProcess.length;\r\n\r\n          console.log(\"DEBUG - Alert creation results:\");\r\n          console.log(\"DEBUG - successCount:\", successCount);\r\n          console.log(\"DEBUG - failureCount:\", failureCount);\r\n          console.log(\"DEBUG - totalCount:\", totalCount);\r\n          console.log(\"DEBUG - symbolsToProcess:\", symbolsToProcess);\r\n\r\n          if (successCount === totalCount) {\r\n            // All alerts created successfully\r\n            if (totalCount === 1) {\r\n              const message = `Alert created successfully for ${symbolsToProcess[0]}!`;\r\n              setSuccessMessage(message);\r\n              showNotification(message, \"success\");\r\n            } else {\r\n              const message = `All ${totalCount} alerts created successfully!`;\r\n              setSuccessMessage(message);\r\n              showNotification(message, \"success\");\r\n            }\r\n\r\n            // Switch to alerts view to show the created alerts\r\n            if (\r\n              marketPanelRef &&\r\n              marketPanelRef.current &&\r\n              marketPanelRef.current.switchToAlertsView\r\n            ) {\r\n              marketPanelRef.current.switchToAlertsView();\r\n            }\r\n          } else if (successCount > 0) {\r\n            // Partial success\r\n            const message = `${successCount} of ${totalCount} alerts created successfully.`;\r\n            setSuccessMessage(message);\r\n            showNotification(message, \"warning\");\r\n            if (failureCount > 0) {\r\n              const failedSymbols = failedAlerts\r\n                .map((f) => f.symbol)\r\n                .join(\", \");\r\n              const errorMsg = `Failed to create alerts for: ${failedSymbols}`;\r\n              setErrorMessage(errorMsg);\r\n              showNotification(errorMsg, \"error\");\r\n            }\r\n          } else {\r\n            // All failed\r\n            const errorMsg = `Failed to create alerts for all ${totalCount} symbols.`;\r\n            setErrorMessage(errorMsg);\r\n            showNotification(errorMsg, \"error\");\r\n          }\r\n\r\n          // Reset form after successful creation(s)\r\n          if (successCount > 0) {\r\n            setPercentageValue(\"\");\r\n\r\n            // Clear the input field directly\r\n            if (percentageInputRef.current) {\r\n              percentageInputRef.current.value = \"\";\r\n            }\r\n\r\n            // Reset percentage value in context\r\n            setCtxFilters((prev) => ({\r\n              ...prev,\r\n              percentageValue: null,\r\n            }));\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error in bulk alert creation:\", error);\r\n          setErrorMessage(`Failed to create alerts: ${error.message}`);\r\n        } finally {\r\n          setIsCreatingAlert(false);\r\n        }\r\n      },\r\n      [\r\n        createAlert,\r\n        getFilterValues,\r\n        setCtxFilters,\r\n        showNotification,\r\n        eventBus,\r\n        setPercentageValue,\r\n        getSelectedPairsArray,\r\n        getSelectedCount,\r\n        selectedSymbol,\r\n        deleteAlertsBySymbol,\r\n        validateAlertForm,\r\n        filters.candle,\r\n        filters.candleCondition,\r\n        filters.market,\r\n        filters.exchange,\r\n        filters.pair,\r\n        filters.percentageValue,\r\n        percentageValue,\r\n        marketPanelRef,\r\n        cryptos,\r\n        getFavoritePairsForAlerts,\r\n      ]\r\n    );\r\n\r\n    // Expose handleCreateAlert function via ref\r\n    useImperativeHandle(ref, () => ({\r\n      handleCreateAlert,\r\n    }));\r\n\r\n    const percentageInputRef = useRef(null);\r\n\r\n    // Handle percentage input value change\r\n    const handlePercentageChange = useCallback(\r\n      (e) => {\r\n        const newValue = e.target.value;\r\n        console.log(\"Percentage input changed to:\", newValue);\r\n        setPercentageValue(newValue);\r\n        handleTextChange(\"percentageValue\", newValue);\r\n\r\n        // Ensure the value is also stored in the input ref for direct access\r\n        if (percentageInputRef.current) {\r\n          percentageInputRef.current.value = newValue;\r\n        }\r\n      },\r\n      [handleTextChange]\r\n    );\r\n\r\n    return (\r\n      <Paper\r\n        sx={{\r\n          bgcolor: \"#0d1117\",\r\n          borderRadius: { xs: \"0px\", md: \"12px\" },\r\n          height: \"100%\",\r\n          p: { xs: 1, sm: 2, md: 3 },\r\n          overflow: \"auto\",\r\n          maxHeight: { xs: \"100vh\", md: \"calc(100vh - 100px)\" },\r\n          width: { xs: \"100%\", md: \"auto\" },\r\n          color: \"white\",\r\n          border: { xs: \"none\", md: \"1px solid rgba(255, 255, 255, 0.08)\" },\r\n          boxShadow: { xs: \"none\", md: \"0 4px 20px rgba(0, 0, 0, 0.3)\" },\r\n          position: { xs: \"relative\", md: \"relative\" },\r\n          zIndex: \"auto\",\r\n        }}\r\n      >\r\n        <Box\r\n          component=\"aside\"\r\n          sx={{\r\n            color: \"text.primary\",\r\n            \"& > *:not(:last-child)\": {\r\n              marginBottom: \"4px\",\r\n            },\r\n          }}\r\n        >\r\n          {isMobile && (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                mb: 2,\r\n                pb: 2,\r\n                borderBottom: \"1px solid rgba(255,255,255,0.1)\",\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" sx={{ fontWeight: 600, color: \"white\" }}>\r\n                Filters & Alerts\r\n              </Typography>\r\n              <Button\r\n                onClick={() => {\r\n                  handleCreateAlert();\r\n                }}\r\n                sx={{\r\n                  minWidth: \"40px\",\r\n                  width: \"40px\",\r\n                  height: \"40px\",\r\n                  borderRadius: \"50%\",\r\n                  p: 0,\r\n                  color: \"white\",\r\n                  \"&:hover\": {\r\n                    backgroundColor: \"rgba(255,255,255,0.1)\",\r\n                  },\r\n                }}\r\n              >\r\n                <CloseIcon />\r\n              </Button>\r\n            </Box>\r\n          )}\r\n          {/* Market Section */}\r\n          <DarkAccordion defaultExpanded>\r\n            <CustomAccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"market-content\"\r\n              id=\"market-header\"\r\n            >\r\n              <DarkTypography>Market </DarkTypography>\r\n            </CustomAccordionSummary>\r\n            <AccordionDetails>\r\n              <FormGroup>\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.market?.SPOT || false}\r\n                      onChange={() => handleCheckboxChange(\"market\", \"SPOT\")}\r\n                    />\r\n                  }\r\n                  label=\"SPOT\"\r\n                />\r\n              </FormGroup>\r\n            </AccordionDetails>\r\n          </DarkAccordion>\r\n\r\n          {/* Exchange Section */}\r\n          <DarkAccordion defaultExpanded>\r\n            <CustomAccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"exchange-content\"\r\n              id=\"exchange-header\"\r\n            >\r\n              <DarkTypography>Exchange </DarkTypography>\r\n            </CustomAccordionSummary>\r\n            <AccordionDetails>\r\n              <FormGroup>\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.exchange?.BINANCE || false}\r\n                      onChange={() =>\r\n                        handleCheckboxChange(\"exchange\", \"BINANCE\")\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"BINANCE\"\r\n                />\r\n              </FormGroup>\r\n            </AccordionDetails>\r\n          </DarkAccordion>\r\n\r\n          {/* Pair Section */}\r\n          <DarkAccordion defaultExpanded>\r\n            <CustomAccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"pair-content\"\r\n              id=\"pair-header\"\r\n            >\r\n              <DarkTypography>Pair </DarkTypography>\r\n            </CustomAccordionSummary>\r\n            <AccordionDetails>\r\n              <FormGroup>\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.pair?.USDT || false}\r\n                      onChange={() => handleCheckboxChange(\"pair\", \"USDT\")}\r\n                    />\r\n                  }\r\n                  label=\"USDT\"\r\n                />\r\n              </FormGroup>\r\n            </AccordionDetails>\r\n          </DarkAccordion>\r\n\r\n          {/* Min. Daily Section */}\r\n          <DarkAccordion defaultExpanded>\r\n            <CustomAccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"min-daily-content\"\r\n              id=\"min-daily-header\"\r\n            >\r\n              <DarkTypography>Min. Daily </DarkTypography>\r\n            </CustomAccordionSummary>\r\n            <AccordionDetails>\r\n              <Box\r\n                sx={{\r\n                  display: \"grid\",\r\n                  gridTemplateColumns: \"1fr 1fr\",\r\n                  gap: 0.5,\r\n                  padding: \"1px 0\",\r\n                }}\r\n              >\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.minDaily?.[\"10K\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"minDaily\", \"10K\")}\r\n                    />\r\n                  }\r\n                  label=\"10k\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.minDaily?.[\"100K\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"minDaily\", \"100K\")}\r\n                    />\r\n                  }\r\n                  label=\"100K\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.minDaily?.[\"500K\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"minDaily\", \"500K\")}\r\n                    />\r\n                  }\r\n                  label=\"500K\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.minDaily?.[\"1MN\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"minDaily\", \"1MN\")}\r\n                    />\r\n                  }\r\n                  label=\"1MN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.minDaily?.[\"2MN\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"minDaily\", \"2MN\")}\r\n                    />\r\n                  }\r\n                  label=\"2MN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.minDaily?.[\"5MN\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"minDaily\", \"5MN\")}\r\n                    />\r\n                  }\r\n                  label=\"5MN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.minDaily?.[\"10MN\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"minDaily\", \"10MN\")}\r\n                    />\r\n                  }\r\n                  label=\"10MN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.minDaily?.[\"25MN\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"minDaily\", \"25MN\")}\r\n                    />\r\n                  }\r\n                  label=\"25MN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.minDaily?.[\"50MN_PLUS\"] || false}\r\n                      onChange={() =>\r\n                        handleCheckboxChange(\"minDaily\", \"50MN_PLUS\")\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"50MN and Above\"\r\n                  sx={{ gridColumn: \"1 / span 2\" }}\r\n                />\r\n              </Box>\r\n            </AccordionDetails>\r\n          </DarkAccordion>\r\n\r\n          {/* Change % */}\r\n          <DarkAccordion defaultExpanded>\r\n            <CustomAccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"change-percent-content\"\r\n              id=\"change-percent-header\"\r\n            >\r\n              <DarkTypography>Change % </DarkTypography>\r\n            </CustomAccordionSummary>\r\n            <AccordionDetails>\r\n              <Box\r\n                sx={{\r\n                  display: \"grid\",\r\n                  gridTemplateColumns: \"1fr 1fr\",\r\n                  gap: 0.5,\r\n                  padding: \"1px 0\",\r\n                }}\r\n              >\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.changePercent?.[\"1MIN\"] || false}\r\n                      onChange={() =>\r\n                        handleCheckboxChange(\"changePercent\", \"1MIN\")\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"1MIN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.changePercent?.[\"5MIN\"] || false}\r\n                      onChange={() =>\r\n                        handleCheckboxChange(\"changePercent\", \"5MIN\")\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"5MIN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.changePercent?.[\"15MIN\"] || false}\r\n                      onChange={() =>\r\n                        handleCheckboxChange(\"changePercent\", \"15MIN\")\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"15MIN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.changePercent?.[\"1HR\"] || false}\r\n                      onChange={() =>\r\n                        handleCheckboxChange(\"changePercent\", \"1HR\")\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"1HR\"\r\n                />\r\n              </Box>\r\n\r\n              {/* Percentage % */}\r\n              <Box\r\n                sx={{\r\n                  mt: 0.5,\r\n                  padding: \"1px 0\",\r\n                }}\r\n              >\r\n                <DarkTypography\r\n                  variant=\"body2\"\r\n                  sx={{ fontSize: \"13px\", mb: 1 }}\r\n                >\r\n                  Percentage %\r\n                </DarkTypography>\r\n                <DarkTextField\r\n                  type=\"number\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  placeholder=\"Enter percentage\"\r\n                  inputRef={percentageInputRef}\r\n                  value={percentageValue || filters.percentageValue || \"\"}\r\n                  onChange={handlePercentageChange}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">%</InputAdornment>\r\n                    ),\r\n                    inputProps: {\r\n                      min: 0.1,\r\n                      step: 0.1,\r\n                    },\r\n                  }}\r\n                  sx={{\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: \"#4f80ff\",\r\n                        borderWidth: \"2px\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: \"#4f80ff\",\r\n                        borderWidth: \"2px\",\r\n                      },\r\n                    },\r\n                  }}\r\n                />\r\n              </Box>\r\n            </AccordionDetails>\r\n          </DarkAccordion>\r\n\r\n          {/* Alert Count */}\r\n          <DarkAccordion defaultExpanded>\r\n            <CustomAccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"alert-count-content\"\r\n              id=\"alert-count-header\"\r\n            >\r\n              <DarkTypography>Alert Count </DarkTypography>\r\n            </CustomAccordionSummary>\r\n            <AccordionDetails>\r\n              <Box\r\n                sx={{\r\n                  display: \"grid\",\r\n                  gridTemplateColumns: \"1fr 1fr\",\r\n                  gap: 0.5,\r\n                  padding: \"1px 0\",\r\n                }}\r\n              >\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.alertCount?.[\"5MIN\"] || false}\r\n                      onChange={() =>\r\n                        handleCheckboxChange(\"alertCount\", \"5MIN\")\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"5MIN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.alertCount?.[\"15MIN\"] || false}\r\n                      onChange={() =>\r\n                        handleCheckboxChange(\"alertCount\", \"15MIN\")\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"15MIN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.alertCount?.[\"1HR\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"alertCount\", \"1HR\")}\r\n                    />\r\n                  }\r\n                  label=\"1HR\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.alertCount?.[\"4HR\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"alertCount\", \"4HR\")}\r\n                    />\r\n                  }\r\n                  label=\"4HR\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.alertCount?.[\"12HR\"] || false}\r\n                      onChange={() =>\r\n                        handleCheckboxChange(\"alertCount\", \"12HR\")\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"12HR\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.alertCount?.[\"D\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"alertCount\", \"D\")}\r\n                    />\r\n                  }\r\n                  label=\"D\"\r\n                />\r\n              </Box>\r\n\r\n              {/* Alert Count Info */}\r\n              {Object.keys(filters.alertCount || {}).some(\r\n                (key) => filters.alertCount[key]\r\n              ) && (\r\n                <Box\r\n                  sx={{\r\n                    mt: 1,\r\n                    p: 1,\r\n                    bgcolor: \"rgba(34, 197, 94, 0.1)\",\r\n                    borderRadius: 1,\r\n                    border: \"1px solid rgba(34, 197, 94, 0.2)\",\r\n                  }}\r\n                >\r\n                  <DarkTypography\r\n                    variant=\"body2\"\r\n                    sx={{\r\n                      fontSize: \"12px\",\r\n                      color: \"#22C55E\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    🚨 Alert Count Enabled: Max 1 alert per candle\r\n                  </DarkTypography>\r\n                  <DarkTypography\r\n                    variant=\"body2\"\r\n                    sx={{\r\n                      fontSize: \"11px\",\r\n                      color: \"rgba(255, 255, 255, 0.7)\",\r\n                      textAlign: \"center\",\r\n                      mt: 0.5,\r\n                    }}\r\n                  >\r\n                    Prevents spam alerts within the same candle timeframe\r\n                  </DarkTypography>\r\n                </Box>\r\n              )}\r\n            </AccordionDetails>\r\n          </DarkAccordion>\r\n\r\n          {/* Candle */}\r\n          <DarkAccordion defaultExpanded>\r\n            <CustomAccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"candle-content\"\r\n              id=\"candle-header\"\r\n            >\r\n              <DarkTypography>Candle</DarkTypography>\r\n            </CustomAccordionSummary>\r\n            <AccordionDetails>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexWrap: \"wrap\",\r\n                  gap: 0.5,\r\n                  padding: \"1px 0\",\r\n                }}\r\n              >\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.candle?.[\"5MIN\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"candle\", \"5MIN\")}\r\n                    />\r\n                  }\r\n                  label=\"5MIN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.candle?.[\"15MIN\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"candle\", \"15MIN\")}\r\n                    />\r\n                  }\r\n                  label=\"15MIN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.candle?.[\"1HR\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"candle\", \"1HR\")}\r\n                    />\r\n                  }\r\n                  label=\"1HR\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.candle?.[\"4HR\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"candle\", \"4HR\")}\r\n                    />\r\n                  }\r\n                  label=\"4HR\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.candle?.[\"12HR\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"candle\", \"12HR\")}\r\n                    />\r\n                  }\r\n                  label=\"12HR\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.candle?.D || false}\r\n                      onChange={() => handleCheckboxChange(\"candle\", \"D\")}\r\n                    />\r\n                  }\r\n                  label=\"D\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.candle?.W || false}\r\n                      onChange={() => handleCheckboxChange(\"candle\", \"W\")}\r\n                    />\r\n                  }\r\n                  label=\"W\"\r\n                />\r\n              </Box>\r\n\r\n              {/* Condition */}\r\n              <Box sx={{ mt: 1 }}>\r\n                <DarkTypography variant=\"body2\" gutterBottom>\r\n                  Condition:\r\n                </DarkTypography>\r\n                <DarkTextField\r\n                  select\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={filters.candleCondition || \"Candle Above Open\"}\r\n                  onChange={(e) =>\r\n                    handleTextChange(\"candleCondition\", e.target.value)\r\n                  }\r\n                >\r\n                  <MenuItem value=\"Candle Above Open\">\r\n                    Candle Above Open\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Candle Below Open\">\r\n                    Candle Below Open\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Green Candle\">\r\n                    Green Candle (Close &gt; Open)\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Red Candle\">\r\n                    Red Candle (Close &lt; Open)\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Bullish Hammer\">Bullish Hammer</MenuItem>\r\n                  <MenuItem value=\"Bearish Hammer\">Bearish Hammer</MenuItem>\r\n                  <MenuItem value=\"Doji\">Doji (Open ≈ Close)</MenuItem>\r\n                  <MenuItem value=\"Long Upper Wick\">Long Upper Wick</MenuItem>\r\n                  <MenuItem value=\"Long Lower Wick\">Long Lower Wick</MenuItem>\r\n                  <MenuItem value=\"None\">None</MenuItem>\r\n                </DarkTextField>\r\n              </Box>\r\n            </AccordionDetails>\r\n          </DarkAccordion>\r\n\r\n          {/* RSI Range */}\r\n          <DarkAccordion defaultExpanded>\r\n            <CustomAccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"rsi-range-content\"\r\n              id=\"rsi-range-header\"\r\n            >\r\n              <DarkTypography>RSI Range (Multiple)</DarkTypography>\r\n            </CustomAccordionSummary>\r\n            <AccordionDetails>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexWrap: \"wrap\",\r\n                  gap: 0.5,\r\n                  padding: \"1px 0\",\r\n                }}\r\n              >\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.rsiRange?.[\"5MIN\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"rsiRange\", \"5MIN\")}\r\n                    />\r\n                  }\r\n                  label=\"5MIN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.rsiRange?.[\"15MIN\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"rsiRange\", \"15MIN\")}\r\n                    />\r\n                  }\r\n                  label=\"15MIN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.rsiRange?.[\"1HR\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"rsiRange\", \"1HR\")}\r\n                    />\r\n                  }\r\n                  label=\"1HR\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.rsiRange?.[\"4HR\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"rsiRange\", \"4HR\")}\r\n                    />\r\n                  }\r\n                  label=\"4HR\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.rsiRange?.[\"12HR\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"rsiRange\", \"12HR\")}\r\n                    />\r\n                  }\r\n                  label=\"12HR\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.rsiRange?.D || false}\r\n                      onChange={() => handleCheckboxChange(\"rsiRange\", \"D\")}\r\n                    />\r\n                  }\r\n                  label=\"D\"\r\n                />\r\n              </Box>\r\n\r\n              <Box sx={{ display: \"flex\", gap: 1, mt: 0.5 }}>\r\n                <Box>\r\n                  <DarkTypography variant=\"body2\" gutterBottom>\r\n                    RSI Period\r\n                  </DarkTypography>\r\n                  <DarkTextField\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    value={filters.rsiPeriod || \"14\"}\r\n                    onChange={(e) =>\r\n                      handleTextChange(\"rsiPeriod\", e.target.value)\r\n                    }\r\n                    sx={{ width: \"100px\" }}\r\n                  />\r\n                </Box>\r\n\r\n                <Box>\r\n                  <DarkTypography variant=\"body2\" gutterBottom>\r\n                    Level (1-100)\r\n                  </DarkTypography>\r\n                  <DarkTextField\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    value={filters.rsiLevel || \"70\"}\r\n                    onChange={(e) =>\r\n                      handleTextChange(\"rsiLevel\", e.target.value)\r\n                    }\r\n                    sx={{ width: \"100px\" }}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box sx={{ mt: 1 }}>\r\n                <Box sx={{ display: \"flex\", gap: 0.5, mb: 1 }}>\r\n                  <DarkButton\r\n                    variant={\r\n                      filters.rsiCondition === \"ABOVE\"\r\n                        ? \"contained\"\r\n                        : \"outlined\"\r\n                    }\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleToggleChange(\"rsiCondition\", null, \"ABOVE\")\r\n                    }\r\n                    sx={{ flex: 1, py: 0.5, fontSize: \"12px\" }}\r\n                  >\r\n                    ABOVE\r\n                  </DarkButton>\r\n                  <DarkButton\r\n                    variant={\r\n                      filters.rsiCondition === \"BELOW\"\r\n                        ? \"contained\"\r\n                        : \"outlined\"\r\n                    }\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleToggleChange(\"rsiCondition\", null, \"BELOW\")\r\n                    }\r\n                    sx={{ flex: 1, py: 0.5, fontSize: \"12px\" }}\r\n                  >\r\n                    BELOW\r\n                  </DarkButton>\r\n                </Box>\r\n\r\n                <Box\r\n                  sx={{ display: \"flex\", flexDirection: \"column\", gap: 0.5 }}\r\n                >\r\n                  <DarkButton\r\n                    variant={\r\n                      filters.rsiCondition === \"CROSSING UP\"\r\n                        ? \"contained\"\r\n                        : \"outlined\"\r\n                    }\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleToggleChange(\"rsiCondition\", null, \"CROSSING UP\")\r\n                    }\r\n                    sx={{ py: 0.5, fontSize: \"12px\" }}\r\n                  >\r\n                    CROSSING UP\r\n                  </DarkButton>\r\n                  <DarkButton\r\n                    variant={\r\n                      filters.rsiCondition === \"CROSSING DOWN\"\r\n                        ? \"contained\"\r\n                        : \"outlined\"\r\n                    }\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleToggleChange(\"rsiCondition\", null, \"CROSSING DOWN\")\r\n                    }\r\n                    sx={{ py: 0.5, fontSize: \"12px\" }}\r\n                  >\r\n                    CROSSING DOWN\r\n                  </DarkButton>\r\n                </Box>\r\n              </Box>\r\n            </AccordionDetails>\r\n          </DarkAccordion>\r\n\r\n          {/* Volume */}\r\n          <DarkAccordion defaultExpanded>\r\n            <CustomAccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"volume-content\"\r\n              id=\"volume-header\"\r\n            >\r\n              <DarkTypography>\r\n                Volume\r\n              </DarkTypography>\r\n            </CustomAccordionSummary>\r\n            <AccordionDetails>\r\n              {/* Timeframe Selection */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <DarkTypography variant=\"body2\" gutterBottom>\r\n                  Timeframe:\r\n                </DarkTypography>\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexWrap: \"wrap\",\r\n                    gap: 0.5,\r\n                    padding: \"1px 0\",\r\n                  }}\r\n                >\r\n                  <StyledFormControlLabel\r\n                    control={\r\n                      <CustomCheckbox\r\n                        checked={filters.volume?.[\"1MIN\"] || false}\r\n                        onChange={() => handleCheckboxChange(\"volume\", \"1MIN\")}\r\n                      />\r\n                    }\r\n                    label=\"1MIN\"\r\n                  />\r\n                  <StyledFormControlLabel\r\n                    control={\r\n                      <CustomCheckbox\r\n                        checked={filters.volume?.[\"5MIN\"] || false}\r\n                        onChange={() => handleCheckboxChange(\"volume\", \"5MIN\")}\r\n                      />\r\n                    }\r\n                    label=\"5MIN\"\r\n                  />\r\n                  <StyledFormControlLabel\r\n                    control={\r\n                      <CustomCheckbox\r\n                        checked={filters.volume?.[\"15MIN\"] || false}\r\n                        onChange={() => handleCheckboxChange(\"volume\", \"15MIN\")}\r\n                      />\r\n                    }\r\n                    label=\"15MIN\"\r\n                  />\r\n                  <StyledFormControlLabel\r\n                    control={\r\n                      <CustomCheckbox\r\n                        checked={filters.volume?.[\"1HR\"] || false}\r\n                        onChange={() => handleCheckboxChange(\"volume\", \"1HR\")}\r\n                      />\r\n                    }\r\n                    label=\"1HR\"\r\n                  />\r\n                  <StyledFormControlLabel\r\n                    control={\r\n                      <CustomCheckbox\r\n                        checked={filters.volume?.[\"4HR\"] || false}\r\n                        onChange={() => handleCheckboxChange(\"volume\", \"4HR\")}\r\n                      />\r\n                    }\r\n                    label=\"4HR\"\r\n                  />\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Condition Selection */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <DarkTypography variant=\"body2\" gutterBottom>\r\n                  Condition:\r\n                </DarkTypography>\r\n                <Box sx={{ display: \"flex\", gap: 0.5, flexWrap: \"wrap\" }}>\r\n                  <DarkButton\r\n                    variant={\r\n                      filters.volumeCondition === \"INCREASING\"\r\n                        ? \"contained\"\r\n                        : \"outlined\"\r\n                    }\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleToggleChange(\"volumeCondition\", null, \"INCREASING\")\r\n                    }\r\n                    sx={{ py: 0.5, fontSize: \"12px\" }}\r\n                  >\r\n                    INCREASING\r\n                  </DarkButton>\r\n                  <DarkButton\r\n                    variant={\r\n                      filters.volumeCondition === \"DECREASING\"\r\n                        ? \"contained\"\r\n                        : \"outlined\"\r\n                    }\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleToggleChange(\"volumeCondition\", null, \"DECREASING\")\r\n                    }\r\n                    sx={{ py: 0.5, fontSize: \"12px\" }}\r\n                  >\r\n                    DECREASING\r\n                  </DarkButton>\r\n                  <DarkButton\r\n                    variant={\r\n                      filters.volumeCondition === \"ABOVE\"\r\n                        ? \"contained\"\r\n                        : \"outlined\"\r\n                    }\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleToggleChange(\"volumeCondition\", null, \"ABOVE\")\r\n                    }\r\n                    sx={{ py: 0.5, fontSize: \"12px\" }}\r\n                  >\r\n                    ABOVE\r\n                  </DarkButton>\r\n                  <DarkButton\r\n                    variant={\r\n                      filters.volumeCondition === \"BELOW\"\r\n                        ? \"contained\"\r\n                        : \"outlined\"\r\n                    }\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleToggleChange(\"volumeCondition\", null, \"BELOW\")\r\n                    }\r\n                    sx={{ py: 0.5, fontSize: \"12px\" }}\r\n                  >\r\n                    BELOW\r\n                  </DarkButton>\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Percentage Input */}\r\n              <Box>\r\n                <DarkTypography variant=\"body2\" gutterBottom>\r\n                  Percentage %:\r\n                </DarkTypography>\r\n                <DarkTextField\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={filters.volumePercentage || \"\"}\r\n                  onChange={(e) =>\r\n                    handleTextChange(\"volumePercentage\", e.target.value)\r\n                  }\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <Typography variant=\"body2\" sx={{ color: \"#94A3B8\" }}>\r\n                          %\r\n                        </Typography>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  placeholder=\"Enter percentage\"\r\n                  sx={{ width: \"100%\" }}\r\n                />\r\n              </Box>\r\n            </AccordionDetails>\r\n          </DarkAccordion>\r\n\r\n          {/* EMA Fast/Slow */}\r\n          <DarkAccordion defaultExpanded>\r\n            <CustomAccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"ema-content\"\r\n              id=\"ema-header\"\r\n            >\r\n              <DarkTypography>EMA Fast / Slow (Multiple)</DarkTypography>\r\n            </CustomAccordionSummary>\r\n            <AccordionDetails>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexWrap: \"wrap\",\r\n                  gap: 0.5,\r\n                  padding: \"1px 0\",\r\n                }}\r\n              >\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.ema?.[\"5MIN\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"ema\", \"5MIN\")}\r\n                    />\r\n                  }\r\n                  label=\"5MIN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.ema?.[\"15MIN\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"ema\", \"15MIN\")}\r\n                    />\r\n                  }\r\n                  label=\"15MIN\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.ema?.[\"1HR\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"ema\", \"1HR\")}\r\n                    />\r\n                  }\r\n                  label=\"1HR\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.ema?.[\"4HR\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"ema\", \"4HR\")}\r\n                    />\r\n                  }\r\n                  label=\"4HR\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.ema?.[\"12HR\"] || false}\r\n                      onChange={() => handleCheckboxChange(\"ema\", \"12HR\")}\r\n                    />\r\n                  }\r\n                  label=\"12HR\"\r\n                />\r\n                <StyledFormControlLabel\r\n                  control={\r\n                    <CustomCheckbox\r\n                      checked={filters.ema?.D || false}\r\n                      onChange={() => handleCheckboxChange(\"ema\", \"D\")}\r\n                    />\r\n                  }\r\n                  label=\"D\"\r\n                />\r\n              </Box>\r\n\r\n              <Box sx={{ display: \"flex\", gap: 1, mt: 0.5 }}>\r\n                <Box>\r\n                  <DarkTypography variant=\"body2\" gutterBottom>\r\n                    Fast\r\n                  </DarkTypography>\r\n                  <DarkTextField\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    value={filters.emaFast || \"12\"}\r\n                    onChange={(e) =>\r\n                      handleTextChange(\"emaFast\", e.target.value)\r\n                    }\r\n                    sx={{ width: \"100px\" }}\r\n                  />\r\n                </Box>\r\n\r\n                <Box>\r\n                  <DarkTypography variant=\"body2\" gutterBottom>\r\n                    Slow\r\n                  </DarkTypography>\r\n                  <DarkTextField\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    value={filters.emaSlow || \"26\"}\r\n                    onChange={(e) =>\r\n                      handleTextChange(\"emaSlow\", e.target.value)\r\n                    }\r\n                    sx={{ width: \"100px\" }}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box sx={{ mt: 1 }}>\r\n                <Box\r\n                  sx={{ display: \"flex\", flexDirection: \"column\", gap: 0.5 }}\r\n                >\r\n                  <DarkButton\r\n                    variant={\r\n                      filters.emaCondition === \"ABOVE\"\r\n                        ? \"contained\"\r\n                        : \"outlined\"\r\n                    }\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleToggleChange(\"emaCondition\", null, \"ABOVE\")\r\n                    }\r\n                    sx={{ py: 0.5, fontSize: \"12px\" }}\r\n                  >\r\n                    ABOVE\r\n                  </DarkButton>\r\n                  <DarkButton\r\n                    variant={\r\n                      filters.emaCondition === \"BELOW\"\r\n                        ? \"contained\"\r\n                        : \"outlined\"\r\n                    }\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleToggleChange(\"emaCondition\", null, \"BELOW\")\r\n                    }\r\n                    sx={{ py: 0.5, fontSize: \"12px\" }}\r\n                  >\r\n                    BELOW\r\n                  </DarkButton>\r\n                  <DarkButton\r\n                    variant={\r\n                      filters.emaCondition === \"CROSSING UP\"\r\n                        ? \"contained\"\r\n                        : \"outlined\"\r\n                    }\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleToggleChange(\"emaCondition\", null, \"CROSSING UP\")\r\n                    }\r\n                    sx={{ py: 0.5, fontSize: \"12px\" }}\r\n                  >\r\n                    CROSSING UP\r\n                  </DarkButton>\r\n                  <DarkButton\r\n                    variant={\r\n                      filters.emaCondition === \"CROSSING DOWN\"\r\n                        ? \"contained\"\r\n                        : \"outlined\"\r\n                    }\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleToggleChange(\"emaCondition\", null, \"CROSSING DOWN\")\r\n                    }\r\n                    sx={{ py: 0.5, fontSize: \"12px\" }}\r\n                  >\r\n                    CROSSING DOWN\r\n                  </DarkButton>\r\n                </Box>\r\n              </Box>\r\n            </AccordionDetails>\r\n          </DarkAccordion>\r\n\r\n          {/* Add New Alert Button */}\r\n          <Box sx={{ mt: 3 }}>\r\n            <LoadingButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              size=\"large\"\r\n              sx={{\r\n                py: { xs: 1, sm: 1.5 },\r\n                mb: { xs: 2, md: 0 },\r\n                fontSize: { xs: \"0.875rem\", sm: \"1rem\" },\r\n              }}\r\n              onClick={handleCreateAlert}\r\n              disabled={validateAlertForm().length > 0}\r\n              loading={isCreatingAlert}\r\n              loadingText=\"Creating Alert...\"\r\n            >\r\n              Create Alert\r\n            </LoadingButton>\r\n          </Box>\r\n\r\n          {/* Error and Success Messages */}\r\n          {errorMessage && (\r\n            <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n              {errorMessage}\r\n            </Alert>\r\n          )}\r\n\r\n          {successMessage && (\r\n            <Alert severity=\"success\" sx={{ mt: 2 }}>\r\n              {successMessage}\r\n            </Alert>\r\n          )}\r\n\r\n          {/* Apply Button for mobile */}\r\n          {isMobile && (\r\n            <Box\r\n              sx={{\r\n                mt: 3,\r\n                position: \"sticky\",\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                bgcolor: \"#0d1117\",\r\n                pt: 1,\r\n                pb: 2,\r\n                zIndex: 5,\r\n                borderTop: \"1px solid rgba(255,255,255,0.1)\",\r\n                px: 1,\r\n              }}\r\n            >\r\n              <LoadingButton\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={() => {\r\n                  handleCreateAlert();\r\n                }}\r\n                disabled={validateAlertForm().length > 0}\r\n                loading={isCreatingAlert}\r\n                loadingText=\"Creating Alert...\"\r\n              >\r\n                Apply & Close\r\n              </LoadingButton>\r\n              {/* Extra space at bottom for mobile */}\r\n              <Box sx={{ height: \"70px\" }} />\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Paper>\r\n    );\r\n  })\r\n);\r\n\r\n// Memoize FilterSidebar with proper comparison\r\nexport default memo(FilterSidebar, (prevProps, nextProps) => {\r\n  return (\r\n    prevProps.selectedSymbol === nextProps.selectedSymbol &&\r\n    prevProps.onAlertCreated === nextProps.onAlertCreated\r\n  );\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Chip,\r\n  Collapse,\r\n  IconButton,\r\n  Divider,\r\n  CircularProgress,\r\n  Alert,\r\n  Badge,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\nimport TelegramIcon from \"@mui/icons-material/Telegram\";\r\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\r\nimport ErrorIcon from \"@mui/icons-material/Error\";\r\nimport ScheduleIcon from \"@mui/icons-material/Schedule\";\r\nimport TrendingUpIcon from \"@mui/icons-material/TrendingUp\";\r\nimport TrendingDownIcon from \"@mui/icons-material/TrendingDown\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst TriggeredAlertsPanel = () => {\r\n  const [triggeredAlerts, setTriggeredAlerts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [expandedSymbols, setExpandedSymbols] = useState({});\r\n  const [symbolHistory, setSymbolHistory] = useState({});\r\n\r\n  // Fetch triggered alerts and set up socket connection\r\n  useEffect(() => {\r\n    fetchTriggeredAlerts();\r\n\r\n    // Listen for daily cleanup event\r\n    const handleDailyCleanup = (event) => {\r\n      console.log('🧹 Daily cleanup triggered - clearing triggered alerts history');\r\n      setTriggeredAlerts([]);\r\n      setSymbolHistory({});\r\n    };\r\n\r\n    window.addEventListener('dailyHistoryCleanup', handleDailyCleanup);\r\n\r\n    // Set up Socket.IO connection for real-time updates\r\n    const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n    const socket = io(API_URL);\r\n\r\n    // Listen for new triggered alerts\r\n    socket.on(\"triggered-alert-created\", (data) => {\r\n      console.log(\"📡 Received new triggered alert via socket:\", data);\r\n\r\n      // Add the new triggered alert to the list immediately\r\n      setTriggeredAlerts((prevAlerts) => {\r\n        // Check if alert already exists to avoid duplicates\r\n        const exists = prevAlerts.some(\r\n          (alert) => alert._id === data.triggeredAlert._id\r\n        );\r\n        if (!exists) {\r\n          return [data.triggeredAlert, ...prevAlerts];\r\n        }\r\n        return prevAlerts;\r\n      });\r\n    });\r\n\r\n    // Set up auto-refresh every 60 seconds as backup (reduced frequency since we have real-time updates)\r\n    const interval = setInterval(() => {\r\n      fetchTriggeredAlerts();\r\n    }, 60000);\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      clearInterval(interval);\r\n      window.removeEventListener('dailyHistoryCleanup', handleDailyCleanup);\r\n    };\r\n  }, []);\r\n\r\n  const fetchTriggeredAlerts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n      console.log(\r\n        \"Fetching triggered alerts from:\",\r\n        `${API_URL}/api/triggered-alerts`\r\n      );\r\n\r\n      const response = await fetch(`${API_URL}/api/triggered-alerts`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setTriggeredAlerts(data.triggeredAlerts || []);\r\n      setError(null); // Clear any previous errors\r\n    } catch (err) {\r\n      console.error(\"Error fetching triggered alerts:\", err);\r\n      setError(`Error loading triggered alerts: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchSymbolHistory = async (symbol) => {\r\n    try {\r\n      const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n      const response = await fetch(\r\n        `${API_URL}/api/triggered-alerts/symbol/${symbol}`\r\n      );\r\n      if (!response.ok) throw new Error(\"Failed to fetch symbol history\");\r\n\r\n      const data = await response.json();\r\n      setSymbolHistory((prev) => ({\r\n        ...prev,\r\n        [symbol]: data.rawHistory || [],\r\n      }));\r\n    } catch (err) {\r\n      console.error(\"Error fetching symbol history:\", err);\r\n    }\r\n  };\r\n\r\n  const toggleSymbolExpansion = (symbol) => {\r\n    const isExpanded = !expandedSymbols[symbol];\r\n    setExpandedSymbols((prev) => ({\r\n      ...prev,\r\n      [symbol]: isExpanded,\r\n    }));\r\n\r\n    // Fetch history when expanding\r\n    if (isExpanded && !symbolHistory[symbol]) {\r\n      fetchSymbolHistory(symbol);\r\n    }\r\n  };\r\n\r\n  const getConditionIcon = (conditionMet) => {\r\n    switch (conditionMet) {\r\n      case \"PRICE_ABOVE\":\r\n      case \"PERCENTAGE_CHANGE\":\r\n      case \"RSI_ABOVE\":\r\n      case \"EMA_CROSS_ABOVE\":\r\n        return <TrendingUpIcon color=\"success\" />;\r\n      case \"PRICE_BELOW\":\r\n      case \"RSI_BELOW\":\r\n      case \"EMA_CROSS_BELOW\":\r\n        return <TrendingDownIcon color=\"error\" />;\r\n      default:\r\n        return <CheckCircleIcon color=\"info\" />;\r\n    }\r\n  };\r\n\r\n  const getNotificationIcon = (type) => {\r\n    switch (type) {\r\n      case \"EMAIL\":\r\n        return <EmailIcon fontSize=\"small\" />;\r\n      case \"TELEGRAM\":\r\n        return <TelegramIcon fontSize=\"small\" />;\r\n      default:\r\n        return <CheckCircleIcon fontSize=\"small\" />;\r\n    }\r\n  };\r\n\r\n  const getNotificationStatusColor = (status) => {\r\n    switch (status) {\r\n      case \"SENT\":\r\n        return \"success\";\r\n      case \"FAILED\":\r\n        return \"error\";\r\n      case \"PENDING\":\r\n        return \"warning\";\r\n      default:\r\n        return \"default\";\r\n    }\r\n  };\r\n\r\n  // Group alerts by symbol\r\n  const groupedAlerts = triggeredAlerts.reduce((acc, alert) => {\r\n    if (!acc[alert.symbol]) {\r\n      acc[alert.symbol] = [];\r\n    }\r\n    acc[alert.symbol].push(alert);\r\n    return acc;\r\n  }, {});\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        height=\"200px\"\r\n      >\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert severity=\"error\" sx={{ m: 2 }}>\r\n        Error loading triggered alerts: {error}\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper sx={{ p: 2, bgcolor: \"#0A0E17\", color: \"white\", height: \"100%\" }}>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        mb={2}\r\n      >\r\n        <Typography variant=\"h6\" sx={{ color: \"#E2E8F0\" }}>\r\n          Triggered Alerts History\r\n        </Typography>\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onClick={fetchTriggeredAlerts}\r\n          sx={{ color: \"#60A5FA\", borderColor: \"#60A5FA\" }}\r\n        >\r\n          Refresh\r\n        </Button>\r\n      </Box>\r\n\r\n      {Object.keys(groupedAlerts).length === 0 ? (\r\n        <Box sx={{ textAlign: \"center\", mt: 4, p: 3 }}>\r\n          <Typography color=\"#94A3B8\">\r\n            No triggered alerts found. Alerts will appear here when conditions\r\n            are met.\r\n          </Typography>\r\n        </Box>\r\n      ) : (\r\n        <List sx={{ maxHeight: \"calc(100vh - 200px)\", overflow: \"auto\" }}>\r\n          {Object.entries(groupedAlerts).map(([symbol, alerts]) => (\r\n            <Box key={symbol}>\r\n              <ListItem\r\n                sx={{\r\n                  bgcolor: \"rgba(255, 255, 255, 0.05)\",\r\n                  borderRadius: 1,\r\n                  mb: 1,\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => toggleSymbolExpansion(symbol)}\r\n              >\r\n                <ListItemText\r\n                  primary={\r\n                    <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                      <Typography variant=\"h6\" sx={{ color: \"#E2E8F0\" }}>\r\n                        {symbol}\r\n                      </Typography>\r\n                      <Badge badgeContent={alerts.length} color=\"primary\" />\r\n                    </Box>\r\n                  }\r\n                  secondary={\r\n                    <Typography variant=\"body2\" sx={{ color: \"#94A3B8\" }}>\r\n                      Last triggered:{\" \"}\r\n                      {format(\r\n                        new Date(alerts[0].triggeredAt),\r\n                        \"MMM dd, yyyy HH:mm\"\r\n                      )}\r\n                    </Typography>\r\n                  }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      toggleSymbolExpansion(symbol);\r\n                    }}\r\n                    sx={{ color: \"#94A3B8\" }}\r\n                  >\r\n                    {expandedSymbols[symbol] ? (\r\n                      <ExpandLessIcon />\r\n                    ) : (\r\n                      <ExpandMoreIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n\r\n              <Collapse\r\n                in={expandedSymbols[symbol]}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n              >\r\n                <Box sx={{ ml: 2, mb: 2 }}>\r\n                  {(symbolHistory[symbol] || alerts).map((alert, index) => (\r\n                    <Paper\r\n                      key={alert._id}\r\n                      sx={{\r\n                        p: 2,\r\n                        mb: 1,\r\n                        bgcolor: \"rgba(255, 255, 255, 0.03)\",\r\n                        border: \"1px solid rgba(255, 255, 255, 0.1)\",\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        display=\"flex\"\r\n                        justifyContent=\"between\"\r\n                        alignItems=\"flex-start\"\r\n                        mb={1}\r\n                      >\r\n                        <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                          {getConditionIcon(alert.conditionMet)}\r\n                          <Typography variant=\"body2\" sx={{ color: \"#E2E8F0\" }}>\r\n                            {alert.conditionDetails?.description ||\r\n                              alert.conditionMet}\r\n                            {alert.changePercentTimeframe && (\r\n                              <span\r\n                                style={{ marginLeft: \"8px\", color: \"#60A5FA\" }}\r\n                              >\r\n                                | Timeframe: {alert.changePercentTimeframe}\r\n                              </span>\r\n                            )}\r\n                          </Typography>\r\n                        </Box>\r\n                        <Typography variant=\"caption\" sx={{ color: \"#94A3B8\" }}>\r\n                          {format(\r\n                            new Date(alert.triggeredAt),\r\n                            \"MMM dd, HH:mm:ss\"\r\n                          )}\r\n                        </Typography>\r\n                      </Box>\r\n\r\n                      {alert.conditionDetails && (\r\n                        <Box mb={1}>\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            sx={{ color: \"#94A3B8\" }}\r\n                          >\r\n                            Target: {alert.conditionDetails.targetValue} |\r\n                            Actual: {alert.conditionDetails.actualValue}\r\n                            {alert.conditionDetails.timeframe &&\r\n                              ` | ${alert.conditionDetails.timeframe}`}\r\n                            {alert.changePercentTimeframe &&\r\n                              ` | Change Timeframe: ${alert.changePercentTimeframe}`}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n\r\n                      {alert.marketData && (\r\n                        <Box mb={1}>\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            sx={{ color: \"#94A3B8\" }}\r\n                          >\r\n                            Price: ${alert.marketData.price} | 24h Change:{\" \"}\r\n                            {alert.marketData.priceChangePercent24h}%\r\n                            {alert.marketData.rsi &&\r\n                              ` | RSI: ${alert.marketData.rsi}`}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n\r\n                      <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\r\n                        {alert.notifications?.map(\r\n                          (notification, notifIndex) => (\r\n                            <Tooltip\r\n                              key={notifIndex}\r\n                              title={`${notification.type} to ${notification.recipient} - ${notification.status}`}\r\n                            >\r\n                              <Chip\r\n                                icon={getNotificationIcon(notification.type)}\r\n                                label={notification.type}\r\n                                size=\"small\"\r\n                                color={getNotificationStatusColor(\r\n                                  notification.status\r\n                                )}\r\n                                variant=\"outlined\"\r\n                              />\r\n                            </Tooltip>\r\n                          )\r\n                        )}\r\n                      </Box>\r\n                    </Paper>\r\n                  ))}\r\n                </Box>\r\n              </Collapse>\r\n\r\n              {Object.keys(groupedAlerts).indexOf(symbol) <\r\n                Object.keys(groupedAlerts).length - 1 && (\r\n                <Divider sx={{ my: 1, bgcolor: \"rgba(255, 255, 255, 0.1)\" }} />\r\n              )}\r\n            </Box>\r\n          ))}\r\n        </List>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TriggeredAlertsPanel;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  Drawer,\r\n  IconButton,\r\n  useTheme,\r\n  useMediaQuery,\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\r\nimport TrendingUpIcon from \"@mui/icons-material/TrendingUp\";\r\nimport ListIcon from \"@mui/icons-material/List\";\r\nimport LineChart from \"./LineChart.js\";\r\nimport MarketPanel from \"./MarketPanel\";\r\nimport FilterSidebar from \"./FilterSidebar\";\r\nimport TriggeredAlertsPanel from \"./TriggeredAlertsPanel\";\r\nimport { useAlert } from \"../context/AlertContext\";\r\nimport { useSelectedPair } from \"../context/SelectedPairContext\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst Dashboard = ({ children }) => {\r\n  const { alerts } = useAlert();\r\n  const { selectedSymbol, selectedTimeframe, selectSymbol, selectTimeframe } =\r\n    useSelectedPair();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  // Keep local state for backward compatibility, but sync with context\r\n  const [selectedCoin, setSelectedCoin] = useState(selectedSymbol);\r\n  const [localTimeframe, setLocalTimeframe] = useState(selectedTimeframe);\r\n  const [lastTriggeredSymbol, setLastTriggeredSymbol] = useState(null);\r\n\r\n  // Mobile responsive state\r\n  const [mobileDrawerOpen, setMobileDrawerOpen] = useState(false);\r\n  const [mobileBottomNav, setMobileBottomNav] = useState(0);\r\n  const [currentMobileView, setCurrentMobileView] = useState(\"chart\"); // 'chart', 'filters', 'market'\r\n\r\n  // Reference to FilterSidebar's createAlert function\r\n  const filterSidebarRef = useRef();\r\n  // Reference to MarketPanel functions\r\n  const marketPanelRef = useRef();\r\n\r\n  // Show triggered alerts instead of regular alerts\r\n  // This section now displays the TriggeredAlertsPanel component\r\n\r\n  // Handle creating alert when favorite is clicked\r\n  const handleCreateAlertFromFavorite = (symbol) => {\r\n    console.log(\"Creating alert for favorited symbol:\", symbol);\r\n    // Trigger FilterSidebar's handleCreateAlert with the selected symbol\r\n    if (\r\n      filterSidebarRef.current &&\r\n      filterSidebarRef.current.handleCreateAlert\r\n    ) {\r\n      filterSidebarRef.current.handleCreateAlert(symbol);\r\n    }\r\n  };\r\n\r\n  // Log alerts for debugging\r\n  useEffect(() => {\r\n    console.log(\"Dashboard - Current alerts state:\", alerts);\r\n  }, [alerts]);\r\n\r\n  // Set default chart symbol and fetch last triggered alert\r\n  useEffect(() => {\r\n    const initializeChart = async () => {\r\n      try {\r\n        // First, fetch the last triggered alert to prioritize it\r\n        const API_URL =\r\n          process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n        const response = await fetch(\r\n          `${API_URL}/api/triggered-alerts?limit=1&sort=createdAt&order=desc`\r\n        );\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data.triggeredAlerts && data.triggeredAlerts.length > 0) {\r\n            const lastTriggered = data.triggeredAlerts[0];\r\n            console.log(\"Last triggered alert:\", lastTriggered);\r\n            setLastTriggeredSymbol(lastTriggered.symbol);\r\n\r\n            // Always show the chart for the latest triggered alert's pair\r\n            console.log(\r\n              \"Setting chart to show latest triggered symbol:\",\r\n              lastTriggered.symbol\r\n            );\r\n            setSelectedCoin(lastTriggered.symbol);\r\n            selectSymbol(lastTriggered.symbol);\r\n          } else {\r\n            // No triggered alerts yet, use BTCUSDT as default\r\n            console.log(\r\n              \"No triggered alerts found, setting BTCUSDT as default\"\r\n            );\r\n            setSelectedCoin(\"BTCUSDT\");\r\n            selectSymbol(\"BTCUSDT\");\r\n          }\r\n        } else {\r\n          // API error, use BTCUSDT as fallback\r\n          console.log(\"API error, using BTCUSDT as fallback\");\r\n          setSelectedCoin(\"BTCUSDT\");\r\n          selectSymbol(\"BTCUSDT\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error initializing chart:\", error);\r\n        // Fallback to BTCUSDT if there's an error\r\n        setSelectedCoin(\"BTCUSDT\");\r\n        selectSymbol(\"BTCUSDT\");\r\n      }\r\n    };\r\n\r\n    initializeChart();\r\n  }, []);\r\n\r\n  // Load latest triggered alert on component mount\r\n  useEffect(() => {\r\n    const loadLatestAlert = async () => {\r\n      try {\r\n        const API_URL =\r\n          process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n        const response = await fetch(\r\n          `${API_URL}/api/triggered-alerts?limit=1&sort=createdAt&order=desc`\r\n        );\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data.triggeredAlerts && data.triggeredAlerts.length > 0) {\r\n            const latestAlert = data.triggeredAlerts[0];\r\n            console.log(\"📊 Dashboard loaded latest alert:\", latestAlert);\r\n\r\n            // Set the latest triggered symbol\r\n            setLastTriggeredSymbol(latestAlert.symbol);\r\n\r\n            // Automatically switch chart to show the latest triggered symbol\r\n            setSelectedCoin(latestAlert.symbol);\r\n            selectSymbol(latestAlert.symbol);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading latest alert:\", error);\r\n      }\r\n    };\r\n\r\n    loadLatestAlert();\r\n  }, [selectSymbol]);\r\n\r\n  // Set up socket connection to listen for new triggered alerts\r\n  useEffect(() => {\r\n    const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n    const socket = io(API_URL);\r\n\r\n    // Listen for new triggered alerts\r\n    socket.on(\"triggered-alert-created\", (data) => {\r\n      console.log(\"📡 Dashboard received new triggered alert:\", data);\r\n\r\n      if (data.triggeredAlert && data.triggeredAlert.symbol) {\r\n        const triggeredSymbol = data.triggeredAlert.symbol;\r\n        console.log(\r\n          \"🔥 Auto-switching chart to triggered alert symbol:\",\r\n          triggeredSymbol\r\n        );\r\n\r\n        setLastTriggeredSymbol(triggeredSymbol);\r\n\r\n        // Automatically switch chart to show the newly triggered symbol\r\n        setSelectedCoin(triggeredSymbol);\r\n        selectSymbol(triggeredSymbol);\r\n\r\n        // Show a brief notification that chart has switched\r\n        console.log(\r\n          `📊 Chart automatically switched to ${triggeredSymbol} due to alert trigger`\r\n        );\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [selectSymbol]);\r\n\r\n  // Handle coin selection from market panel\r\n  const handleCoinSelect = (symbol) => {\r\n    // Ensure symbol is a string, not an object\r\n    const symbolStr =\r\n      typeof symbol === \"object\"\r\n        ? symbol.symbol || \"BTCUSDT\" // Extract symbol property if it's an object\r\n        : String(symbol); // Convert to string otherwise\r\n\r\n    console.log(`Dashboard: Coin selected from market panel: ${symbolStr}`);\r\n    setSelectedCoin(symbolStr);\r\n    selectSymbol(symbolStr); // Update global context\r\n  };\r\n\r\n  // Handle timeframe change\r\n  const handleTimeframeChange = (newTimeframe) => {\r\n    console.log(`Dashboard: Timeframe changed to: ${newTimeframe}`);\r\n    setLocalTimeframe(newTimeframe);\r\n    selectTimeframe(newTimeframe); // Update global context\r\n  };\r\n\r\n  // Mobile navigation handlers\r\n  const handleMobileBottomNavChange = (event, newValue) => {\r\n    setMobileBottomNav(newValue);\r\n    switch (newValue) {\r\n      case 0:\r\n        setCurrentMobileView(\"chart\");\r\n        break;\r\n      case 1:\r\n        setCurrentMobileView(\"filters\");\r\n        setMobileDrawerOpen(true);\r\n        break;\r\n      case 2:\r\n        setCurrentMobileView(\"market\");\r\n        setMobileDrawerOpen(true);\r\n        break;\r\n      default:\r\n        setCurrentMobileView(\"chart\");\r\n    }\r\n  };\r\n\r\n  const handleMobileDrawerClose = () => {\r\n    setMobileDrawerOpen(false);\r\n  };\r\n\r\n  // Mobile view renderer\r\n  const renderMobileView = () => {\r\n    switch (currentMobileView) {\r\n      case \"filters\":\r\n        return (\r\n          <Box sx={{ p: 0.4, height: \"100%\", overflow: \"auto\" }}>\r\n            <FilterSidebar\r\n              ref={filterSidebarRef}\r\n              selectedSymbol={selectedCoin}\r\n              marketPanelRef={marketPanelRef}\r\n            />\r\n          </Box>\r\n        );\r\n      case \"market\":\r\n        return (\r\n          <Box sx={{ p: 0.4, height: \"100%\", overflow: \"auto\" }}>\r\n            <MarketPanel\r\n              onSelectCoin={handleCoinSelect}\r\n              onCreateAlert={handleCreateAlertFromFavorite}\r\n              onRef={(ref) => {\r\n                marketPanelRef.current = ref;\r\n              }}\r\n            />\r\n          </Box>\r\n        );\r\n      default:\r\n        return renderChartView();\r\n    }\r\n  };\r\n\r\n  // Chart view renderer\r\n  const renderChartView = () => (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        minHeight: \"100vh\",\r\n        p: { xs: 0.2, sm: 0.1 },\r\n        gap: 0.2,\r\n      }}\r\n    >\r\n      {/* Show button to switch to last triggered symbol if different from current */}\r\n      {lastTriggeredSymbol && lastTriggeredSymbol !== selectedCoin && (\r\n        <Box sx={{ mb: 0.2, textAlign: \"center\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              console.log(\r\n                `📊 Manually switching to triggered alert symbol: ${lastTriggeredSymbol}`\r\n              );\r\n              setSelectedCoin(lastTriggeredSymbol);\r\n              selectSymbol(lastTriggeredSymbol);\r\n            }}\r\n            sx={{\r\n              bgcolor: \"#22C55E\",\r\n              color: \"white\",\r\n              \"&:hover\": { bgcolor: \"#16A34A\" },\r\n              fontSize: \"0.6rem\",\r\n              py: 0.1,\r\n              px: 0.8,\r\n              minHeight: \"20px\",\r\n              borderRadius: 1,\r\n              animation: \"pulse 2s infinite\",\r\n              \"@keyframes pulse\": {\r\n                \"0%\": { opacity: 1 },\r\n                \"50%\": { opacity: 0.7 },\r\n                \"100%\": { opacity: 1 },\r\n              },\r\n            }}\r\n          >\r\n            🔥 New Alert: {lastTriggeredSymbol}\r\n          </Button>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Chart Header - Show if displaying latest triggered alert */}\r\n\r\n      {/* LineChart with selected coin */}\r\n      {console.log(\r\n        \"📊 Dashboard rendering LineChart with symbol:\",\r\n        selectedCoin,\r\n        \"timeframe:\",\r\n        localTimeframe\r\n      )}\r\n      <LineChart\r\n        symbol={selectedCoin}\r\n        timeframe={localTimeframe}\r\n        onTimeframeChange={handleTimeframeChange}\r\n        onSymbolChange={(newSymbol) => {\r\n          console.log(\r\n            \"🔄 Dashboard: Chart requested symbol change to:\",\r\n            newSymbol\r\n          );\r\n          setSelectedCoin(newSymbol);\r\n          selectSymbol(newSymbol);\r\n        }}\r\n      />\r\n\r\n      {/* Bottom area - Alerts List */}\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          overflow: \"auto\",\r\n          borderRadius: 1,\r\n          bgcolor: \"#0A0E17\",\r\n          p: 0.4,\r\n          mt: 0.2,\r\n        }}\r\n      >\r\n        {/* Triggered Alerts Panel - Only shows alerts that have been triggered */}\r\n        <Box\r\n          sx={{\r\n            mt: 0.2,\r\n            minHeight: { xs: \"200px\", sm: \"160px\" },\r\n            overflow: \"auto\",\r\n          }}\r\n        >\r\n          <TriggeredAlertsPanel />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n        bgcolor: \"#0A0E17\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        m: 0,\r\n        p: 0,\r\n        maxWidth: \"100%\",\r\n        boxSizing: \"border-box\",\r\n        // Custom scrollbar styling for dashboard scroll\r\n        \"&::-webkit-scrollbar\": {\r\n          width: \"4px\",\r\n          height: \"2px\",\r\n        },\r\n        \"&::-webkit-scrollbar-track\": {\r\n          background: \"#1a1a1a\",\r\n          borderRadius: \"4px\",\r\n        },\r\n        \"&::-webkit-scrollbar-thumb\": {\r\n          background: \"#4f80ff\",\r\n          borderRadius: \"4px\",\r\n          minHeight: \"20px\",\r\n          \"&:hover\": {\r\n            background: \"#3b6ae8\",\r\n          },\r\n        },\r\n        \"&::-webkit-scrollbar-corner\": {\r\n          background: \"#1a1a1a\",\r\n        },\r\n      }}\r\n    >\r\n      {/* Desktop Layout */}\r\n      {!isMobile ? (\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          sx={{\r\n            flexGrow: 1,\r\n            minHeight: \"100vh\",\r\n            m: 0,\r\n            p: 0,\r\n            maxWidth: \"100%\",\r\n            width: \"100%\",\r\n            boxSizing: \"border-box\",\r\n            overflow: \"visible\",\r\n          }}\r\n        >\r\n          {/* Left Section - Filters Sidebar */}\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={3}\r\n            lg={3}\r\n            sx={{\r\n              minHeight: \"100vh\",\r\n              display: { xs: \"none\", md: \"block\" },\r\n              p: 0,\r\n              maxWidth: \"23%\",\r\n              flexBasis: \"23%\",\r\n              boxSizing: \"border-box\",\r\n            }}\r\n          >\r\n            <Paper\r\n              sx={{\r\n                p: 0.2,\r\n                height: \"100vh\",\r\n                overflow: \"auto\",\r\n                bgcolor: \"#0A0E17\",\r\n                borderRadius: 0,\r\n                m: 0,\r\n                position: \"sticky\",\r\n                top: 0,\r\n              }}\r\n            >\r\n              <FilterSidebar\r\n                ref={filterSidebarRef}\r\n                selectedSymbol={selectedCoin}\r\n                marketPanelRef={marketPanelRef}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n\r\n          {/* Main Section - Chart and Alerts */}\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            lg={6}\r\n            sx={{\r\n              minHeight: \"100vh\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              p: 0,\r\n              maxWidth: \"54%\",\r\n              flexBasis: \"54%\",\r\n              boxSizing: \"border-box\",\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                height: \"100vh\",\r\n                overflow: \"auto\",\r\n                position: \"sticky\",\r\n                top: 0,\r\n              }}\r\n            >\r\n              {renderChartView()}\r\n            </Box>\r\n          </Grid>\r\n\r\n          {/* Right Section - Market Panel */}\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={3}\r\n            lg={3}\r\n            sx={{\r\n              minHeight: \"100vh\",\r\n              display: { xs: \"none\", md: \"block\" },\r\n              p: 0,\r\n              maxWidth: \"23%\",\r\n              flexBasis: \"23%\",\r\n              boxSizing: \"border-box\",\r\n            }}\r\n          >\r\n            <Paper\r\n              sx={{\r\n                p: 0.2,\r\n                height: \"100vh\",\r\n                overflow: \"auto\",\r\n                bgcolor: \"#0A0E17\",\r\n                borderRadius: 0,\r\n                m: 0,\r\n                position: \"sticky\",\r\n                top: 0,\r\n              }}\r\n            >\r\n              <MarketPanel\r\n                onSelectCoin={handleCoinSelect}\r\n                onCreateAlert={handleCreateAlertFromFavorite}\r\n                onRef={(ref) => {\r\n                  marketPanelRef.current = ref;\r\n                }}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        /* Mobile Layout */\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            minHeight: \"100vh\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            pb: 4, // Reduced space for bottom navigation\r\n          }}\r\n        >\r\n          {/* Mobile Header with Menu Button */}\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              p: 0.4,\r\n              bgcolor: \"rgba(0, 0, 0, 0.2)\",\r\n              borderBottom: \"1px solid rgba(255, 255, 255, 0.1)\",\r\n            }}\r\n          >\r\n            <IconButton\r\n              onClick={() => setMobileDrawerOpen(true)}\r\n              sx={{ color: \"white\", mr: 1 }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              variant=\"h6\"\r\n              sx={{ color: \"white\", flexGrow: 1, fontSize: \"0.9rem\" }}\r\n            >\r\n              {currentMobileView === \"chart\"\r\n                ? \"Trading Dashboard\"\r\n                : currentMobileView === \"filters\"\r\n                ? \"Filters\"\r\n                : \"Market\"}\r\n            </Typography>\r\n          </Box>\r\n\r\n          {/* Mobile Content Area */}\r\n          <Box\r\n            sx={{\r\n              flexGrow: 1,\r\n              overflow: \"auto\",\r\n              // Custom scrollbar styling for mobile\r\n              \"&::-webkit-scrollbar\": {\r\n                width: \"6px\",\r\n                height: \"6px\",\r\n              },\r\n              \"&::-webkit-scrollbar-track\": {\r\n                background: \"#1a1a1a\",\r\n                borderRadius: \"4px\",\r\n              },\r\n              \"&::-webkit-scrollbar-thumb\": {\r\n                background: \"#4f80ff\",\r\n                borderRadius: \"4px\",\r\n                minHeight: \"15px\",\r\n                \"&:hover\": {\r\n                  background: \"#3b6ae8\",\r\n                },\r\n              },\r\n              \"&::-webkit-scrollbar-corner\": {\r\n                background: \"#1a1a1a\",\r\n              },\r\n            }}\r\n          >\r\n            {renderMobileView()}\r\n          </Box>\r\n\r\n          {/* Mobile Bottom Navigation */}\r\n          <BottomNavigation\r\n            value={mobileBottomNav}\r\n            onChange={handleMobileBottomNavChange}\r\n            sx={{\r\n              position: \"fixed\",\r\n              bottom: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bgcolor: \"#0A0E17\",\r\n              borderTop: \"1px solid rgba(255, 255, 255, 0.1)\",\r\n              zIndex: 1000,\r\n              \"& .MuiBottomNavigationAction-root\": {\r\n                color: \"rgba(255, 255, 255, 0.6)\",\r\n                \"&.Mui-selected\": {\r\n                  color: \"#22C55E\",\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            <BottomNavigationAction label=\"Chart\" icon={<TrendingUpIcon />} />\r\n            <BottomNavigationAction label=\"Filters\" icon={<FilterListIcon />} />\r\n            <BottomNavigationAction label=\"Market\" icon={<ListIcon />} />\r\n          </BottomNavigation>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Mobile Drawer */}\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={mobileDrawerOpen}\r\n        onClose={handleMobileDrawerClose}\r\n        sx={{\r\n          \"& .MuiDrawer-paper\": {\r\n            width: { xs: \"100%\", sm: \"400px\" },\r\n            bgcolor: \"#0A0E17\",\r\n            color: \"white\",\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            p: 0.4,\r\n            borderBottom: \"1px solid rgba(255, 255, 255, 0.1)\",\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={handleMobileDrawerClose}\r\n            sx={{ color: \"white\", mr: 1 }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" sx={{ color: \"white\", fontSize: \"0.9rem\" }}>\r\n            {currentMobileView === \"filters\"\r\n              ? \"Filters & Alerts\"\r\n              : \"Market Panel\"}\r\n          </Typography>\r\n        </Box>\r\n        <Box sx={{ flexGrow: 1, overflow: \"auto\" }}>\r\n          {currentMobileView === \"filters\" ? (\r\n            <FilterSidebar\r\n              ref={filterSidebarRef}\r\n              selectedSymbol={selectedCoin}\r\n              marketPanelRef={marketPanelRef}\r\n            />\r\n          ) : (\r\n            <MarketPanel\r\n              onSelectCoin={handleCoinSelect}\r\n              onCreateAlert={handleCreateAlertFromFavorite}\r\n              onRef={(ref) => {\r\n                marketPanelRef.current = ref;\r\n              }}\r\n            />\r\n          )}\r\n        </Box>\r\n      </Drawer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["TIMEFRAMES","value","label","limit","_ref","_latestAlert$marketDa","_latestAlert$marketDa2","_latestAlert$conditio","symbol","timeframe","propTimeframe","onTimeframeChange","onSymbolChange","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","containerRef","useRef","chartRef","seriesRef","loading","setLoading","useState","error","setError","selectedTimeframe","setSelectedTimeframe","latestAlert","setLatestAlert","livePrice","setLivePrice","isShowingTriggeredAlert","setIsShowingTriggeredAlert","isUsingFallbackData","setIsUsingFallbackData","currentTimeframeConfig","find","tf","useEffect","async","API_URL","process","response","fetch","concat","ok","data","json","triggeredAlerts","length","console","log","fetchLatestAlert","socket","require","io","on","_data$triggeredAlert$","_data$triggeredAlert$2","triggeredAlert","marketData","price","conditionDetails","actualValue","current","timestamp","newDataPoint","time","Math","floor","Date","now","update","disconnect","chartKey","remove","handleTimeframeChange","useCallback","newTimeframe","warn","symbolStr","String","apiUrl","status","statusText","Error","_fallback","chart","createChart","width","clientWidth","height","layout","background","color","textColor","grid","vertLines","horzLines","timeScale","timeVisible","borderColor","series","addSeries","LineSeries","lineWidth","crosshairMarkerVisible","crosshairMarkerRadius","slice","map","item","formattedData","dateObj","isFinite","year","getFullYear","month","getMonth","padStart","day","getDate","Number","close","originalTime","timeMap","Map","set","Array","from","values","sort","a","b","localeCompare","_ref2","setData","fitContent","err","message","fetchDataAndRenderChart","_jsxs","Paper","sx","p","xs","sm","mb","bgcolor","borderRadius","children","Box","display","justifyContent","alignItems","flexDirection","gap","_jsx","Typography","variant","fontWeight","fontSize","px","py","border","num","volume","toFixed","ButtonGroup","size","minWidth","Button","onClick","ref","md","position","boxShadow","transition","CircularProgress","textAlign","mt","targetValue","format","triggeredAt","type","direction","timeout","in","inProp","props","_objectWithoutProperties","_excluded","transitionProps","_objectSpread","Slide","Grow","Collapse","Fade","constructor","maxConcurrent","arguments","undefined","this","queue","running","add","requestFunction","Promise","resolve","reject","push","shift","request","filter","r","MarketPanel","_filters$pair","_filters$pair2","onSelectCoin","onCreateAlert","onAlertsCreated","onRef","cryptos","toggleFavorite","batchToggleFavorites","isFavorite","getFavoriteSymbols","isOperationPending","clearAllFavorites","checkAlertConditions","loadCryptos","useCrypto","filters","getValidationFilters","hasActiveFilters","useFilters","alerts","deleteAlert","useAlert","togglePairSelection","isPairSelected","useSelectedPairs","view","setView","searchTerm","setSearchTerm","searchInput","setSearchInput","searchTimeoutRef","meetingConditions","setMeetingConditions","setCheckingConditions","selectAllChecked","setSelectAllChecked","checkedPairs","setCheckedPairs","Set","isResettingFavorites","setIsResettingFavorites","isDeletingAllAlerts","setIsDeletingAllAlerts","deletingAlertId","setDeletingAlertId","checkConditions","useThrottle","callback","inThrottle","setTimeout","results","validationFilters","coinList","crypto","alertSymbols","alert","isActive","coinsWithAlerts","coin","has","c","i","promises","then","result","meetsConditions","catch","all","filteredCryptos","useMemo","filtered","endsWith","isSpotTradingAllowed","trim","term","toLowerCase","includes","name","uniqueFiltered","index","self","findIndex","aIsFavorite","bIsFavorite","pair","totalFilteredCount","handleSelectAll","event","isChecked","target","checked","visibleSymbols","favoriteOperations","action","forEach","prev","newSet","delete","removeOperations","favoriteSymbols","newCheckedPairs","every","checkedVisibleCount","totalVisible","debouncedCheckConditions","useDebounce","delay","timeoutRef","_len","args","_key","clearTimeout","handleViewChange","newView","handleSearchChange","handleResetFavorites","deletePromises","_id","alertId","overflow","flexWrap","USDT","Chip","ToggleButtonGroup","exclusive","onChange","fullWidth","ToggleButton","disabled","textTransform","backgroundColor","opacity","alpha","InputBase","ml","flex","placeholder","IconButton","SearchIcon","borderBottom","FormControlLabel","control","Checkbox","SmoothTransition","List","flexGrow","maxHeight","ErrorOutlineIcon","align","gutterBottom","ManageSearchIcon","CurrencyExchangeIcon","React","ListItem","mr","cursor","ListItemText","primary","icon","NotificationsActiveIcon","parseFloat","priceChangePercent24h","TrendingUpIcon","TrendingDownIcon","secondary","rsi","getRSILabel","Divider","component","_","Skeleton","memo","loadingText","CustomCheckbox","styled","disableRipple","style","checkedIcon","CheckIcon","DarkAccordion","Accordion","marginBottom","minHeight","padding","margin","letterSpacing","CustomAccordionSummary","AccordionSummary","DarkTextField","TextField","borderWidth","DarkButton","transform","StyledFormControlLabel","marginLeft","DarkTypography","FilterSidebar","forwardRef","_filters$market","_filters$exchange","_filters$minDaily","_filters$minDaily2","_filters$minDaily3","_filters$minDaily4","_filters$minDaily5","_filters$minDaily6","_filters$minDaily7","_filters$minDaily8","_filters$minDaily9","_filters$changePercen","_filters$changePercen2","_filters$changePercen3","_filters$changePercen4","_filters$alertCount","_filters$alertCount2","_filters$alertCount3","_filters$alertCount4","_filters$alertCount5","_filters$alertCount6","_filters$candle","_filters$candle2","_filters$candle3","_filters$candle4","_filters$candle5","_filters$candle6","_filters$candle7","_filters$rsiRange","_filters$rsiRange2","_filters$rsiRange3","_filters$rsiRange4","_filters$rsiRange5","_filters$rsiRange6","_filters$volume","_filters$volume2","_filters$volume3","_filters$volume4","_filters$volume5","_filters$ema","_filters$ema2","_filters$ema3","_filters$ema4","_filters$ema5","_filters$ema6","marketPanelRef","ctxFilters","setFilters","setCtxFilters","getFilterValues","createAlert","deleteAlertsBySymbol","selectedSymbol","useSelectedPair","updateFilter","updateCryptoFilter","getSelectedPairsArray","getSelectedCount","getFavoritePairsForAlerts","showNotification","useSocket","errorMessage","setErrorMessage","successMessage","setSuccessMessage","percentageValue","setPercentageValue","isCreatingAlert","setIsCreatingAlert","eventBus","emit","isSmall","handleCheckboxChange","category","newFilters","_ctxFilters$category","_ctxFilters$category2","handleTextChange","handleToggleChange","newValue","validateAlertForm","errors","hasChangePercent","Object","keys","changePercent","some","key","hasRSI","rsiRange","rsiPeriod","rsiLevel","hasEMA","ema","emaFast","emaSlow","hasCandle","candle","hasVolume","percentValue","isNaN","period","level","fast","slow","condition","candleCondition","Doji","None","volumeCondition","volumePercentage","volumePercent","handleCreateAlert","symbolOverride","toISOString","JSON","stringify","favoritePairs","entries","prop","extractionAttempts","Symbol","SYMBOL","ticker","code","attempt","selectedPairs","selectedCount","symbolsToProcess","validSelectedPairs","hasActiveConditions","validationErrors","join","pad","n","toString","alertTime","getHours","getMinutes","filterValues","firstSelected","sectionObj","k","market","exchange","tradingPair","minDailyVolume","changePercentTimeframe","alertCountTimeframe","alertCount","alertCountEnabled","enabled","rsiConfig","emaConfig","candleTimeframe","finalPercentageValue","percentageInputRef","deletionResults","axios","symbols","s","deletedCount","success","deletionPromises","cleanSymbol","currentSymbol","alertResults","failedAlerts","alertCreationPromises","alertData","targetType","trackingMode","intervalMinutes","volumeChangeRequired","comment","email","changePercentValue","Boolean","maxAlertsPerTimeframe","candleTimeframes","rsiEnabled","rsiTimeframe","rsiCondition","replace","emaEnabled","emaTimeframe","emaFastPeriod","fastPeriod","emaSlowPeriod","slowPeriod","emaCondition","volumeEnabled","volumeTimeframes","created","_error$response","_error$response$data","_error$response2","successCount","failureCount","totalCount","switchToAlertsView","failedSymbols","f","errorMsg","useImperativeHandle","handlePercentageChange","e","zIndex","pb","CloseIcon","defaultExpanded","expandIcon","ExpandMoreIcon","id","AccordionDetails","FormGroup","SPOT","BINANCE","gridTemplateColumns","minDaily","gridColumn","inputRef","InputProps","endAdornment","InputAdornment","inputProps","min","step","D","W","select","MenuItem","LoadingButton","Alert","severity","bottom","left","right","pt","borderTop","prevProps","nextProps","onAlertCreated","TriggeredAlertsPanel","setTriggeredAlerts","expandedSymbols","setExpandedSymbols","symbolHistory","setSymbolHistory","fetchTriggeredAlerts","handleDailyCleanup","window","addEventListener","prevAlerts","interval","setInterval","clearInterval","removeEventListener","toggleSymbolExpansion","isExpanded","rawHistory","fetchSymbolHistory","getConditionIcon","conditionMet","CheckCircleIcon","getNotificationIcon","EmailIcon","TelegramIcon","getNotificationStatusColor","groupedAlerts","reduce","acc","m","Badge","badgeContent","ListItemSecondaryAction","edge","stopPropagation","ExpandLessIcon","unmountOnExit","_alert$conditionDetai","_alert$notifications","description","notifications","notification","notifIndex","Tooltip","title","recipient","indexOf","my","selectSymbol","selectTimeframe","selectedCoin","setSelectedCoin","localTimeframe","setLocalTimeframe","lastTriggeredSymbol","setLastTriggeredSymbol","mobileDrawerOpen","setMobileDrawerOpen","mobileBottomNav","setMobileBottomNav","currentMobileView","setCurrentMobileView","filterSidebarRef","handleCreateAlertFromFavorite","lastTriggered","initializeChart","loadLatestAlert","triggeredSymbol","handleCoinSelect","handleMobileDrawerClose","renderChartView","animation","LineChart","newSymbol","maxWidth","boxSizing","MenuIcon","renderMobileView","BottomNavigation","handleMobileBottomNavChange","BottomNavigationAction","FilterListIcon","ListIcon","Grid","container","spacing","lg","flexBasis","top","Drawer","anchor","open","onClose"],"sourceRoot":""}